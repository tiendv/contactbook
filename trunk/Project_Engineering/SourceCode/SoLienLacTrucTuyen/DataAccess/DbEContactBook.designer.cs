#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoLienLacTrucTuyen.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DbEContactBook")]
	public partial class DbEContactBookDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void InsertUserManagement_RoleDetail(UserManagement_RoleDetail instance);
    partial void UpdateUserManagement_RoleDetail(UserManagement_RoleDetail instance);
    partial void DeleteUserManagement_RoleDetail(UserManagement_RoleDetail instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Path(aspnet_Path instance);
    partial void Updateaspnet_Path(aspnet_Path instance);
    partial void Deleteaspnet_Path(aspnet_Path instance);
    partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void InsertCauHinh_Buoi(CauHinh_Buoi instance);
    partial void UpdateCauHinh_Buoi(CauHinh_Buoi instance);
    partial void DeleteCauHinh_Buoi(CauHinh_Buoi instance);
    partial void InsertCauHinh_HocKy(CauHinh_HocKy instance);
    partial void UpdateCauHinh_HocKy(CauHinh_HocKy instance);
    partial void DeleteCauHinh_HocKy(CauHinh_HocKy instance);
    partial void InsertCauHinh_NamHoc(CauHinh_NamHoc instance);
    partial void UpdateCauHinh_NamHoc(CauHinh_NamHoc instance);
    partial void DeleteCauHinh_NamHoc(CauHinh_NamHoc instance);
    partial void InsertCauHinh_Thu(CauHinh_Thu instance);
    partial void UpdateCauHinh_Thu(CauHinh_Thu instance);
    partial void DeleteCauHinh_Thu(CauHinh_Thu instance);
    partial void InsertCauHinh_TinhTrangYKien(CauHinh_TinhTrangYKien instance);
    partial void UpdateCauHinh_TinhTrangYKien(CauHinh_TinhTrangYKien instance);
    partial void DeleteCauHinh_TinhTrangYKien(CauHinh_TinhTrangYKien instance);
    partial void InsertDanhMuc_ChiTietDanhHieu(DanhMuc_ChiTietDanhHieu instance);
    partial void UpdateDanhMuc_ChiTietDanhHieu(DanhMuc_ChiTietDanhHieu instance);
    partial void DeleteDanhMuc_ChiTietDanhHieu(DanhMuc_ChiTietDanhHieu instance);
    partial void InsertDanhMuc_DanhHieu(DanhMuc_DanhHieu instance);
    partial void UpdateDanhMuc_DanhHieu(DanhMuc_DanhHieu instance);
    partial void DeleteDanhMuc_DanhHieu(DanhMuc_DanhHieu instance);
    partial void InsertDanhMuc_HanhKiem(DanhMuc_HanhKiem instance);
    partial void UpdateDanhMuc_HanhKiem(DanhMuc_HanhKiem instance);
    partial void DeleteDanhMuc_HanhKiem(DanhMuc_HanhKiem instance);
    partial void InsertDanhMuc_HocLuc(DanhMuc_HocLuc instance);
    partial void UpdateDanhMuc_HocLuc(DanhMuc_HocLuc instance);
    partial void DeleteDanhMuc_HocLuc(DanhMuc_HocLuc instance);
    partial void InsertDanhMuc_KhoiLop(DanhMuc_KhoiLop instance);
    partial void UpdateDanhMuc_KhoiLop(DanhMuc_KhoiLop instance);
    partial void DeleteDanhMuc_KhoiLop(DanhMuc_KhoiLop instance);
    partial void InsertDanhMuc_LoaiDiem(DanhMuc_LoaiDiem instance);
    partial void UpdateDanhMuc_LoaiDiem(DanhMuc_LoaiDiem instance);
    partial void DeleteDanhMuc_LoaiDiem(DanhMuc_LoaiDiem instance);
    partial void InsertDanhMuc_MonHoc(DanhMuc_MonHoc instance);
    partial void UpdateDanhMuc_MonHoc(DanhMuc_MonHoc instance);
    partial void DeleteDanhMuc_MonHoc(DanhMuc_MonHoc instance);
    partial void InsertDanhMuc_NganhHoc(DanhMuc_NganhHoc instance);
    partial void UpdateDanhMuc_NganhHoc(DanhMuc_NganhHoc instance);
    partial void DeleteDanhMuc_NganhHoc(DanhMuc_NganhHoc instance);
    partial void InsertDanhMuc_ThaiDoThamGia(DanhMuc_ThaiDoThamGia instance);
    partial void UpdateDanhMuc_ThaiDoThamGia(DanhMuc_ThaiDoThamGia instance);
    partial void DeleteDanhMuc_ThaiDoThamGia(DanhMuc_ThaiDoThamGia instance);
    partial void InsertDanhMuc_Tiet(DanhMuc_Tiet instance);
    partial void UpdateDanhMuc_Tiet(DanhMuc_Tiet instance);
    partial void DeleteDanhMuc_Tiet(DanhMuc_Tiet instance);
    partial void InsertGopY_YKien(GopY_YKien instance);
    partial void UpdateGopY_YKien(GopY_YKien instance);
    partial void DeleteGopY_YKien(GopY_YKien instance);
    partial void InsertHocSinh_ChiTietDiem(HocSinh_ChiTietDiem instance);
    partial void UpdateHocSinh_ChiTietDiem(HocSinh_ChiTietDiem instance);
    partial void DeleteHocSinh_ChiTietDiem(HocSinh_ChiTietDiem instance);
    partial void InsertHocSinh_DanhHieuHocKy(HocSinh_DanhHieuHocKy instance);
    partial void UpdateHocSinh_DanhHieuHocKy(HocSinh_DanhHieuHocKy instance);
    partial void DeleteHocSinh_DanhHieuHocKy(HocSinh_DanhHieuHocKy instance);
    partial void InsertHocSinh_DiemMonHocHocKy(HocSinh_DiemMonHocHocKy instance);
    partial void UpdateHocSinh_DiemMonHocHocKy(HocSinh_DiemMonHocHocKy instance);
    partial void DeleteHocSinh_DiemMonHocHocKy(HocSinh_DiemMonHocHocKy instance);
    partial void InsertHocSinh_HoatDong(HocSinh_HoatDong instance);
    partial void UpdateHocSinh_HoatDong(HocSinh_HoatDong instance);
    partial void DeleteHocSinh_HoatDong(HocSinh_HoatDong instance);
    partial void InsertHocSinh_HocSinhLopHoc(HocSinh_HocSinhLopHoc instance);
    partial void UpdateHocSinh_HocSinhLopHoc(HocSinh_HocSinhLopHoc instance);
    partial void DeleteHocSinh_HocSinhLopHoc(HocSinh_HocSinhLopHoc instance);
    partial void InsertHocSinh_Khen(HocSinh_Khen instance);
    partial void UpdateHocSinh_Khen(HocSinh_Khen instance);
    partial void DeleteHocSinh_Khen(HocSinh_Khen instance);
    partial void InsertHocSinh_NgayNghiHoc(HocSinh_NgayNghiHoc instance);
    partial void UpdateHocSinh_NgayNghiHoc(HocSinh_NgayNghiHoc instance);
    partial void DeleteHocSinh_NgayNghiHoc(HocSinh_NgayNghiHoc instance);
    partial void InsertHocSinh_Phat(HocSinh_Phat instance);
    partial void UpdateHocSinh_Phat(HocSinh_Phat instance);
    partial void DeleteHocSinh_Phat(HocSinh_Phat instance);
    partial void InsertHocSinh_ThongTinCaNhan(HocSinh_ThongTinCaNhan instance);
    partial void UpdateHocSinh_ThongTinCaNhan(HocSinh_ThongTinCaNhan instance);
    partial void DeleteHocSinh_ThongTinCaNhan(HocSinh_ThongTinCaNhan instance);
    partial void InsertLoiNhanKhan_LoiNhanKhan(LoiNhanKhan_LoiNhanKhan instance);
    partial void UpdateLoiNhanKhan_LoiNhanKhan(LoiNhanKhan_LoiNhanKhan instance);
    partial void DeleteLoiNhanKhan_LoiNhanKhan(LoiNhanKhan_LoiNhanKhan instance);
    partial void InsertLopHoc_GiaoVien(LopHoc_GiaoVien instance);
    partial void UpdateLopHoc_GiaoVien(LopHoc_GiaoVien instance);
    partial void DeleteLopHoc_GiaoVien(LopHoc_GiaoVien instance);
    partial void InsertLopHoc_GVCN(LopHoc_GVCN instance);
    partial void UpdateLopHoc_GVCN(LopHoc_GVCN instance);
    partial void DeleteLopHoc_GVCN(LopHoc_GVCN instance);
    partial void InsertLopHoc_Lop(LopHoc_Lop instance);
    partial void UpdateLopHoc_Lop(LopHoc_Lop instance);
    partial void DeleteLopHoc_Lop(LopHoc_Lop instance);
    partial void InsertLopHoc_MonHocTKB(LopHoc_MonHocTKB instance);
    partial void UpdateLopHoc_MonHocTKB(LopHoc_MonHocTKB instance);
    partial void DeleteLopHoc_MonHocTKB(LopHoc_MonHocTKB instance);
    partial void InsertLopHoc_ThongBao(LopHoc_ThongBao instance);
    partial void UpdateLopHoc_ThongBao(LopHoc_ThongBao instance);
    partial void DeleteLopHoc_ThongBao(LopHoc_ThongBao instance);
    partial void InsertSchool(School instance);
    partial void UpdateSchool(School instance);
    partial void DeleteSchool(School instance);
    partial void InsertUserManagement_Accessibility(UserManagement_Accessibility instance);
    partial void UpdateUserManagement_Accessibility(UserManagement_Accessibility instance);
    partial void DeleteUserManagement_Accessibility(UserManagement_Accessibility instance);
    partial void InsertUserManagement_Authorization(UserManagement_Authorization instance);
    partial void UpdateUserManagement_Authorization(UserManagement_Authorization instance);
    partial void DeleteUserManagement_Authorization(UserManagement_Authorization instance);
    partial void InsertUserManagement_AuthorizedPage(UserManagement_AuthorizedPage instance);
    partial void UpdateUserManagement_AuthorizedPage(UserManagement_AuthorizedPage instance);
    partial void DeleteUserManagement_AuthorizedPage(UserManagement_AuthorizedPage instance);
    partial void InsertUserManagement_Function(UserManagement_Function instance);
    partial void UpdateUserManagement_Function(UserManagement_Function instance);
    partial void DeleteUserManagement_Function(UserManagement_Function instance);
    partial void InsertUserManagement_GVCNUser(UserManagement_GVCNUser instance);
    partial void UpdateUserManagement_GVCNUser(UserManagement_GVCNUser instance);
    partial void DeleteUserManagement_GVCNUser(UserManagement_GVCNUser instance);
    partial void InsertUserManagement_Menus(UserManagement_Menus instance);
    partial void UpdateUserManagement_Menus(UserManagement_Menus instance);
    partial void DeleteUserManagement_Menus(UserManagement_Menus instance);
    partial void InsertUserManagement_PagePath(UserManagement_PagePath instance);
    partial void UpdateUserManagement_PagePath(UserManagement_PagePath instance);
    partial void DeleteUserManagement_PagePath(UserManagement_PagePath instance);
    #endregion
		
		public DbEContactBookDataContext() : 
				base(global::SoLienLacTrucTuyen.DataAccess.Properties.Settings.Default.DbEContactBookConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DbEContactBookDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbEContactBookDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbEContactBookDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbEContactBookDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<UserManagement_RoleDetail> UserManagement_RoleDetails
		{
			get
			{
				return this.GetTable<UserManagement_RoleDetail>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Path>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Event>();
			}
		}
		
		public System.Data.Linq.Table<CauHinh_Buoi> CauHinh_Buois
		{
			get
			{
				return this.GetTable<CauHinh_Buoi>();
			}
		}
		
		public System.Data.Linq.Table<CauHinh_HeThong> CauHinh_HeThongs
		{
			get
			{
				return this.GetTable<CauHinh_HeThong>();
			}
		}
		
		public System.Data.Linq.Table<CauHinh_HocKy> CauHinh_HocKies
		{
			get
			{
				return this.GetTable<CauHinh_HocKy>();
			}
		}
		
		public System.Data.Linq.Table<CauHinh_NamHoc> CauHinh_NamHocs
		{
			get
			{
				return this.GetTable<CauHinh_NamHoc>();
			}
		}
		
		public System.Data.Linq.Table<CauHinh_Thu> CauHinh_Thus
		{
			get
			{
				return this.GetTable<CauHinh_Thu>();
			}
		}
		
		public System.Data.Linq.Table<CauHinh_TinhTrangYKien> CauHinh_TinhTrangYKiens
		{
			get
			{
				return this.GetTable<CauHinh_TinhTrangYKien>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc_ChiTietDanhHieu> DanhMuc_ChiTietDanhHieus
		{
			get
			{
				return this.GetTable<DanhMuc_ChiTietDanhHieu>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc_DanhHieu> DanhMuc_DanhHieus
		{
			get
			{
				return this.GetTable<DanhMuc_DanhHieu>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc_HanhKiem> DanhMuc_HanhKiems
		{
			get
			{
				return this.GetTable<DanhMuc_HanhKiem>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc_HocLuc> DanhMuc_HocLucs
		{
			get
			{
				return this.GetTable<DanhMuc_HocLuc>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc_KhoiLop> DanhMuc_KhoiLops
		{
			get
			{
				return this.GetTable<DanhMuc_KhoiLop>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc_LoaiDiem> DanhMuc_LoaiDiems
		{
			get
			{
				return this.GetTable<DanhMuc_LoaiDiem>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc_MonHoc> DanhMuc_MonHocs
		{
			get
			{
				return this.GetTable<DanhMuc_MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc_NganhHoc> DanhMuc_NganhHocs
		{
			get
			{
				return this.GetTable<DanhMuc_NganhHoc>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc_ThaiDoThamGia> DanhMuc_ThaiDoThamGias
		{
			get
			{
				return this.GetTable<DanhMuc_ThaiDoThamGia>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc_Tiet> DanhMuc_Tiets
		{
			get
			{
				return this.GetTable<DanhMuc_Tiet>();
			}
		}
		
		public System.Data.Linq.Table<GopY_YKien> GopY_YKiens
		{
			get
			{
				return this.GetTable<GopY_YKien>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh_ChiTietDiem> HocSinh_ChiTietDiems
		{
			get
			{
				return this.GetTable<HocSinh_ChiTietDiem>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh_DanhHieuHocKy> HocSinh_DanhHieuHocKies
		{
			get
			{
				return this.GetTable<HocSinh_DanhHieuHocKy>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh_DiemMonHocHocKy> HocSinh_DiemMonHocHocKies
		{
			get
			{
				return this.GetTable<HocSinh_DiemMonHocHocKy>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh_HoatDong> HocSinh_HoatDongs
		{
			get
			{
				return this.GetTable<HocSinh_HoatDong>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh_HocSinhLopHoc> HocSinh_HocSinhLopHocs
		{
			get
			{
				return this.GetTable<HocSinh_HocSinhLopHoc>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh_Khen> HocSinh_Khens
		{
			get
			{
				return this.GetTable<HocSinh_Khen>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh_NgayNghiHoc> HocSinh_NgayNghiHocs
		{
			get
			{
				return this.GetTable<HocSinh_NgayNghiHoc>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh_Phat> HocSinh_Phats
		{
			get
			{
				return this.GetTable<HocSinh_Phat>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh_ThongTinCaNhan> HocSinh_ThongTinCaNhans
		{
			get
			{
				return this.GetTable<HocSinh_ThongTinCaNhan>();
			}
		}
		
		public System.Data.Linq.Table<LoiNhanKhan_LoiNhanKhan> LoiNhanKhan_LoiNhanKhans
		{
			get
			{
				return this.GetTable<LoiNhanKhan_LoiNhanKhan>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc_GiaoVien> LopHoc_GiaoViens
		{
			get
			{
				return this.GetTable<LopHoc_GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc_GVCN> LopHoc_GVCNs
		{
			get
			{
				return this.GetTable<LopHoc_GVCN>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc_Lop> LopHoc_Lops
		{
			get
			{
				return this.GetTable<LopHoc_Lop>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc_MonHocTKB> LopHoc_MonHocTKBs
		{
			get
			{
				return this.GetTable<LopHoc_MonHocTKB>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc_ThongBao> LopHoc_ThongBaos
		{
			get
			{
				return this.GetTable<LopHoc_ThongBao>();
			}
		}
		
		public System.Data.Linq.Table<School> Schools
		{
			get
			{
				return this.GetTable<School>();
			}
		}
		
		public System.Data.Linq.Table<System_Parameter> System_Parameters
		{
			get
			{
				return this.GetTable<System_Parameter>();
			}
		}
		
		public System.Data.Linq.Table<UserManagement_Accessibility> UserManagement_Accessibilities
		{
			get
			{
				return this.GetTable<UserManagement_Accessibility>();
			}
		}
		
		public System.Data.Linq.Table<UserManagement_Authorization> UserManagement_Authorizations
		{
			get
			{
				return this.GetTable<UserManagement_Authorization>();
			}
		}
		
		public System.Data.Linq.Table<UserManagement_AuthorizedPage> UserManagement_AuthorizedPages
		{
			get
			{
				return this.GetTable<UserManagement_AuthorizedPage>();
			}
		}
		
		public System.Data.Linq.Table<UserManagement_Function> UserManagement_Functions
		{
			get
			{
				return this.GetTable<UserManagement_Function>();
			}
		}
		
		public System.Data.Linq.Table<UserManagement_GVCNUser> UserManagement_GVCNUsers
		{
			get
			{
				return this.GetTable<UserManagement_GVCNUser>();
			}
		}
		
		public System.Data.Linq.Table<UserManagement_Menus> UserManagement_Menus
		{
			get
			{
				return this.GetTable<UserManagement_Menus>();
			}
		}
		
		public System.Data.Linq.Table<UserManagement_PagePath> UserManagement_PagePaths
		{
			get
			{
				return this.GetTable<UserManagement_PagePath>();
			}
		}
		
		public System.Data.Linq.Table<UserManagement_RoleBasedFunctionFlag> UserManagement_RoleBasedFunctionFlags
		{
			get
			{
				return this.GetTable<UserManagement_RoleBasedFunctionFlag>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Path> _aspnet_Paths;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManagement_RoleDetails")]
	public partial class UserManagement_RoleDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RoleId;
		
		private string _Description;
		
		private bool _Expired;
		
		private bool _CanBeDeleted;
		
		private bool _Actived;
		
		private System.Nullable<System.Guid> _ParentRoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnExpiredChanging(bool value);
    partial void OnExpiredChanged();
    partial void OnCanBeDeletedChanging(bool value);
    partial void OnCanBeDeletedChanged();
    partial void OnActivedChanging(bool value);
    partial void OnActivedChanged();
    partial void OnParentRoleIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentRoleIdChanged();
    #endregion
		
		public UserManagement_RoleDetail()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expired", DbType="Bit NOT NULL")]
		public bool Expired
		{
			get
			{
				return this._Expired;
			}
			set
			{
				if ((this._Expired != value))
				{
					this.OnExpiredChanging(value);
					this.SendPropertyChanging();
					this._Expired = value;
					this.SendPropertyChanged("Expired");
					this.OnExpiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBeDeleted", DbType="Bit NOT NULL")]
		public bool CanBeDeleted
		{
			get
			{
				return this._CanBeDeleted;
			}
			set
			{
				if ((this._CanBeDeleted != value))
				{
					this.OnCanBeDeletedChanging(value);
					this.SendPropertyChanging();
					this._CanBeDeleted = value;
					this.SendPropertyChanged("CanBeDeleted");
					this.OnCanBeDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actived", DbType="Bit NOT NULL")]
		public bool Actived
		{
			get
			{
				return this._Actived;
			}
			set
			{
				if ((this._Actived != value))
				{
					this.OnActivedChanging(value);
					this.SendPropertyChanging();
					this._Actived = value;
					this.SendPropertyChanged("Actived");
					this.OnActivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentRoleId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentRoleId
		{
			get
			{
				return this._ParentRoleId;
			}
			set
			{
				if ((this._ParentRoleId != value))
				{
					this.OnParentRoleIdChanging(value);
					this.SendPropertyChanging();
					this._ParentRoleId = value;
					this.SendPropertyChanged("ParentRoleId");
					this.OnParentRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_UserManagement_RoleDetail", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.UserManagement_RoleDetail = null;
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.UserManagement_RoleDetail = this;
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _ThoiHanBatDau;
		
		private System.Nullable<System.DateTime> _ThoiHanKetThuc;
		
		private bool _KichHoat;
		
		private bool _CanBeDeleted;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnThoiHanBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiHanBatDauChanged();
    partial void OnThoiHanKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiHanKetThucChanged();
    partial void OnKichHoatChanging(bool value);
    partial void OnKichHoatChanged();
    partial void OnCanBeDeletedChanging(bool value);
    partial void OnCanBeDeletedChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiHanBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiHanBatDau
		{
			get
			{
				return this._ThoiHanBatDau;
			}
			set
			{
				if ((this._ThoiHanBatDau != value))
				{
					this.OnThoiHanBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiHanBatDau = value;
					this.SendPropertyChanged("ThoiHanBatDau");
					this.OnThoiHanBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiHanKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiHanKetThuc
		{
			get
			{
				return this._ThoiHanKetThuc;
			}
			set
			{
				if ((this._ThoiHanKetThuc != value))
				{
					this.OnThoiHanKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiHanKetThuc = value;
					this.SendPropertyChanged("ThoiHanKetThuc");
					this.OnThoiHanKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichHoat", DbType="Bit NOT NULL")]
		public bool KichHoat
		{
			get
			{
				return this._KichHoat;
			}
			set
			{
				if ((this._KichHoat != value))
				{
					this.OnKichHoatChanging(value);
					this.SendPropertyChanging();
					this._KichHoat = value;
					this.SendPropertyChanged("KichHoat");
					this.OnKichHoatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBeDeleted", DbType="Bit NOT NULL")]
		public bool CanBeDeleted
		{
			get
			{
				return this._CanBeDeleted;
			}
			set
			{
				if ((this._CanBeDeleted != value))
				{
					this.OnCanBeDeletedChanging(value);
					this.SendPropertyChanging();
					this._CanBeDeleted = value;
					this.SendPropertyChanged("CanBeDeleted");
					this.OnCanBeDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Path()
		{
			this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
		{
			get
			{
				return this._aspnet_PersonalizationAllUser.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser.Entity = null;
						previousValue.aspnet_Path = null;
					}
					this._aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationAllUser = null;
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntityRef<UserManagement_RoleDetail> _UserManagement_RoleDetail;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntitySet<UserManagement_Authorization> _UserManagement_Authorizations;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._UserManagement_RoleDetail = default(EntityRef<UserManagement_RoleDetail>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._UserManagement_Authorizations = new EntitySet<UserManagement_Authorization>(new Action<UserManagement_Authorization>(this.attach_UserManagement_Authorizations), new Action<UserManagement_Authorization>(this.detach_UserManagement_Authorizations));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_UserManagement_RoleDetail", Storage="_UserManagement_RoleDetail", ThisKey="RoleId", OtherKey="RoleId", IsUnique=true, IsForeignKey=false)]
		public UserManagement_RoleDetail UserManagement_RoleDetail
		{
			get
			{
				return this._UserManagement_RoleDetail.Entity;
			}
			set
			{
				UserManagement_RoleDetail previousValue = this._UserManagement_RoleDetail.Entity;
				if (((previousValue != value) 
							|| (this._UserManagement_RoleDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserManagement_RoleDetail.Entity = null;
						previousValue.aspnet_Role = null;
					}
					this._UserManagement_RoleDetail.Entity = value;
					if ((value != null))
					{
						value.aspnet_Role = this;
					}
					this.SendPropertyChanged("UserManagement_RoleDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_UserManagement_Authorization", Storage="_UserManagement_Authorizations", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<UserManagement_Authorization> UserManagement_Authorizations
		{
			get
			{
				return this._UserManagement_Authorizations;
			}
			set
			{
				this._UserManagement_Authorizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_UserManagement_Authorizations(UserManagement_Authorization entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_UserManagement_Authorizations(UserManagement_Authorization entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntitySet<UserManagement_GVCNUser> _UserManagement_GVCNUsers;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._UserManagement_GVCNUsers = new EntitySet<UserManagement_GVCNUser>(new Action<UserManagement_GVCNUser>(this.attach_UserManagement_GVCNUsers), new Action<UserManagement_GVCNUser>(this.detach_UserManagement_GVCNUsers));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_UserManagement_GVCNUser", Storage="_UserManagement_GVCNUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UserManagement_GVCNUser> UserManagement_GVCNUsers
		{
			get
			{
				return this._UserManagement_GVCNUsers;
			}
			set
			{
				this._UserManagement_GVCNUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_UserManagement_GVCNUsers(UserManagement_GVCNUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_UserManagement_GVCNUsers(UserManagement_GVCNUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHinh_Buoi")]
	public partial class CauHinh_Buoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBuoi;
		
		private string _TenBuoi;
		
		private EntitySet<DanhMuc_Tiet> _DanhMuc_Tiets;
		
		private EntitySet<LopHoc_MonHocTKB> _LopHoc_MonHocTKBs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBuoiChanging(int value);
    partial void OnMaBuoiChanged();
    partial void OnTenBuoiChanging(string value);
    partial void OnTenBuoiChanged();
    #endregion
		
		public CauHinh_Buoi()
		{
			this._DanhMuc_Tiets = new EntitySet<DanhMuc_Tiet>(new Action<DanhMuc_Tiet>(this.attach_DanhMuc_Tiets), new Action<DanhMuc_Tiet>(this.detach_DanhMuc_Tiets));
			this._LopHoc_MonHocTKBs = new EntitySet<LopHoc_MonHocTKB>(new Action<LopHoc_MonHocTKB>(this.attach_LopHoc_MonHocTKBs), new Action<LopHoc_MonHocTKB>(this.detach_LopHoc_MonHocTKBs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBuoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBuoi
		{
			get
			{
				return this._MaBuoi;
			}
			set
			{
				if ((this._MaBuoi != value))
				{
					this.OnMaBuoiChanging(value);
					this.SendPropertyChanging();
					this._MaBuoi = value;
					this.SendPropertyChanged("MaBuoi");
					this.OnMaBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBuoi", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenBuoi
		{
			get
			{
				return this._TenBuoi;
			}
			set
			{
				if ((this._TenBuoi != value))
				{
					this.OnTenBuoiChanging(value);
					this.SendPropertyChanging();
					this._TenBuoi = value;
					this.SendPropertyChanged("TenBuoi");
					this.OnTenBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_Buoi_DanhMuc_Tiet", Storage="_DanhMuc_Tiets", ThisKey="MaBuoi", OtherKey="MaBuoi")]
		public EntitySet<DanhMuc_Tiet> DanhMuc_Tiets
		{
			get
			{
				return this._DanhMuc_Tiets;
			}
			set
			{
				this._DanhMuc_Tiets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_Buoi_LopHoc_MonHocTKB", Storage="_LopHoc_MonHocTKBs", ThisKey="MaBuoi", OtherKey="MaBuoi")]
		public EntitySet<LopHoc_MonHocTKB> LopHoc_MonHocTKBs
		{
			get
			{
				return this._LopHoc_MonHocTKBs;
			}
			set
			{
				this._LopHoc_MonHocTKBs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhMuc_Tiets(DanhMuc_Tiet entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_Buoi = this;
		}
		
		private void detach_DanhMuc_Tiets(DanhMuc_Tiet entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_Buoi = null;
		}
		
		private void attach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_Buoi = this;
		}
		
		private void detach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_Buoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHinh_HeThong")]
	public partial class CauHinh_HeThong
	{
		
		private int _MaNamHocHienHanh;
		
		private int _MaHocKyHienHanh;
		
		public CauHinh_HeThong()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHocHienHanh", DbType="Int NOT NULL")]
		public int MaNamHocHienHanh
		{
			get
			{
				return this._MaNamHocHienHanh;
			}
			set
			{
				if ((this._MaNamHocHienHanh != value))
				{
					this._MaNamHocHienHanh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKyHienHanh", DbType="Int NOT NULL")]
		public int MaHocKyHienHanh
		{
			get
			{
				return this._MaHocKyHienHanh;
			}
			set
			{
				if ((this._MaHocKyHienHanh != value))
				{
					this._MaHocKyHienHanh = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHinh_HocKy")]
	public partial class CauHinh_HocKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHocKy;
		
		private string _TenHocKy;
		
		private EntitySet<HocSinh_DanhHieuHocKy> _HocSinh_DanhHieuHocKies;
		
		private EntitySet<HocSinh_DiemMonHocHocKy> _HocSinh_DiemMonHocHocKies;
		
		private EntitySet<HocSinh_HoatDong> _HocSinh_HoatDongs;
		
		private EntitySet<HocSinh_Khen> _HocSinh_Khens;
		
		private EntitySet<HocSinh_NgayNghiHoc> _HocSinh_NgayNghiHocs;
		
		private EntitySet<HocSinh_Phat> _HocSinh_Phats;
		
		private EntitySet<LopHoc_MonHocTKB> _LopHoc_MonHocTKBs;
		
		private EntitySet<LopHoc_ThongBao> _LopHoc_ThongBaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocKyChanging(int value);
    partial void OnMaHocKyChanged();
    partial void OnTenHocKyChanging(string value);
    partial void OnTenHocKyChanged();
    #endregion
		
		public CauHinh_HocKy()
		{
			this._HocSinh_DanhHieuHocKies = new EntitySet<HocSinh_DanhHieuHocKy>(new Action<HocSinh_DanhHieuHocKy>(this.attach_HocSinh_DanhHieuHocKies), new Action<HocSinh_DanhHieuHocKy>(this.detach_HocSinh_DanhHieuHocKies));
			this._HocSinh_DiemMonHocHocKies = new EntitySet<HocSinh_DiemMonHocHocKy>(new Action<HocSinh_DiemMonHocHocKy>(this.attach_HocSinh_DiemMonHocHocKies), new Action<HocSinh_DiemMonHocHocKy>(this.detach_HocSinh_DiemMonHocHocKies));
			this._HocSinh_HoatDongs = new EntitySet<HocSinh_HoatDong>(new Action<HocSinh_HoatDong>(this.attach_HocSinh_HoatDongs), new Action<HocSinh_HoatDong>(this.detach_HocSinh_HoatDongs));
			this._HocSinh_Khens = new EntitySet<HocSinh_Khen>(new Action<HocSinh_Khen>(this.attach_HocSinh_Khens), new Action<HocSinh_Khen>(this.detach_HocSinh_Khens));
			this._HocSinh_NgayNghiHocs = new EntitySet<HocSinh_NgayNghiHoc>(new Action<HocSinh_NgayNghiHoc>(this.attach_HocSinh_NgayNghiHocs), new Action<HocSinh_NgayNghiHoc>(this.detach_HocSinh_NgayNghiHocs));
			this._HocSinh_Phats = new EntitySet<HocSinh_Phat>(new Action<HocSinh_Phat>(this.attach_HocSinh_Phats), new Action<HocSinh_Phat>(this.detach_HocSinh_Phats));
			this._LopHoc_MonHocTKBs = new EntitySet<LopHoc_MonHocTKB>(new Action<LopHoc_MonHocTKB>(this.attach_LopHoc_MonHocTKBs), new Action<LopHoc_MonHocTKB>(this.detach_LopHoc_MonHocTKBs));
			this._LopHoc_ThongBaos = new EntitySet<LopHoc_ThongBao>(new Action<LopHoc_ThongBao>(this.attach_LopHoc_ThongBaos), new Action<LopHoc_ThongBao>(this.detach_LopHoc_ThongBaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHocKy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenHocKy
		{
			get
			{
				return this._TenHocKy;
			}
			set
			{
				if ((this._TenHocKy != value))
				{
					this.OnTenHocKyChanging(value);
					this.SendPropertyChanging();
					this._TenHocKy = value;
					this.SendPropertyChanged("TenHocKy");
					this.OnTenHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_HocSinh_DanhHieuHocKy", Storage="_HocSinh_DanhHieuHocKies", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<HocSinh_DanhHieuHocKy> HocSinh_DanhHieuHocKies
		{
			get
			{
				return this._HocSinh_DanhHieuHocKies;
			}
			set
			{
				this._HocSinh_DanhHieuHocKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_HocSinh_DiemMonHocHocKy", Storage="_HocSinh_DiemMonHocHocKies", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<HocSinh_DiemMonHocHocKy> HocSinh_DiemMonHocHocKies
		{
			get
			{
				return this._HocSinh_DiemMonHocHocKies;
			}
			set
			{
				this._HocSinh_DiemMonHocHocKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_HocSinh_HoatDong", Storage="_HocSinh_HoatDongs", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<HocSinh_HoatDong> HocSinh_HoatDongs
		{
			get
			{
				return this._HocSinh_HoatDongs;
			}
			set
			{
				this._HocSinh_HoatDongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_HocSinh_Khen", Storage="_HocSinh_Khens", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<HocSinh_Khen> HocSinh_Khens
		{
			get
			{
				return this._HocSinh_Khens;
			}
			set
			{
				this._HocSinh_Khens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_HocSinh_NgayNghiHoc", Storage="_HocSinh_NgayNghiHocs", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<HocSinh_NgayNghiHoc> HocSinh_NgayNghiHocs
		{
			get
			{
				return this._HocSinh_NgayNghiHocs;
			}
			set
			{
				this._HocSinh_NgayNghiHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_HocSinh_Phat", Storage="_HocSinh_Phats", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<HocSinh_Phat> HocSinh_Phats
		{
			get
			{
				return this._HocSinh_Phats;
			}
			set
			{
				this._HocSinh_Phats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_LopHoc_MonHocTKB", Storage="_LopHoc_MonHocTKBs", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<LopHoc_MonHocTKB> LopHoc_MonHocTKBs
		{
			get
			{
				return this._LopHoc_MonHocTKBs;
			}
			set
			{
				this._LopHoc_MonHocTKBs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_LopHoc_ThongBao", Storage="_LopHoc_ThongBaos", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<LopHoc_ThongBao> LopHoc_ThongBaos
		{
			get
			{
				return this._LopHoc_ThongBaos;
			}
			set
			{
				this._LopHoc_ThongBaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinh_DanhHieuHocKies(HocSinh_DanhHieuHocKy entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = this;
		}
		
		private void detach_HocSinh_DanhHieuHocKies(HocSinh_DanhHieuHocKy entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = null;
		}
		
		private void attach_HocSinh_DiemMonHocHocKies(HocSinh_DiemMonHocHocKy entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = this;
		}
		
		private void detach_HocSinh_DiemMonHocHocKies(HocSinh_DiemMonHocHocKy entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = null;
		}
		
		private void attach_HocSinh_HoatDongs(HocSinh_HoatDong entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = this;
		}
		
		private void detach_HocSinh_HoatDongs(HocSinh_HoatDong entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = null;
		}
		
		private void attach_HocSinh_Khens(HocSinh_Khen entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = this;
		}
		
		private void detach_HocSinh_Khens(HocSinh_Khen entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = null;
		}
		
		private void attach_HocSinh_NgayNghiHocs(HocSinh_NgayNghiHoc entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = this;
		}
		
		private void detach_HocSinh_NgayNghiHocs(HocSinh_NgayNghiHoc entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = null;
		}
		
		private void attach_HocSinh_Phats(HocSinh_Phat entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = this;
		}
		
		private void detach_HocSinh_Phats(HocSinh_Phat entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = null;
		}
		
		private void attach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = this;
		}
		
		private void detach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = null;
		}
		
		private void attach_LopHoc_ThongBaos(LopHoc_ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = this;
		}
		
		private void detach_LopHoc_ThongBaos(LopHoc_ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_HocKy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHinh_NamHoc")]
	public partial class CauHinh_NamHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNamHoc;
		
		private string _TenNamHoc;
		
		private System.DateTime _NamBatDau;
		
		private EntitySet<LopHoc_Lop> _LopHoc_Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNamHocChanging(int value);
    partial void OnMaNamHocChanged();
    partial void OnTenNamHocChanging(string value);
    partial void OnTenNamHocChanged();
    partial void OnNamBatDauChanging(System.DateTime value);
    partial void OnNamBatDauChanged();
    #endregion
		
		public CauHinh_NamHoc()
		{
			this._LopHoc_Lops = new EntitySet<LopHoc_Lop>(new Action<LopHoc_Lop>(this.attach_LopHoc_Lops), new Action<LopHoc_Lop>(this.detach_LopHoc_Lops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNamHoc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNamHoc
		{
			get
			{
				return this._TenNamHoc;
			}
			set
			{
				if ((this._TenNamHoc != value))
				{
					this.OnTenNamHocChanging(value);
					this.SendPropertyChanging();
					this._TenNamHoc = value;
					this.SendPropertyChanged("TenNamHoc");
					this.OnTenNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamBatDau", DbType="DateTime NOT NULL")]
		public System.DateTime NamBatDau
		{
			get
			{
				return this._NamBatDau;
			}
			set
			{
				if ((this._NamBatDau != value))
				{
					this.OnNamBatDauChanging(value);
					this.SendPropertyChanging();
					this._NamBatDau = value;
					this.SendPropertyChanged("NamBatDau");
					this.OnNamBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_NamHoc_LopHoc_Lop", Storage="_LopHoc_Lops", ThisKey="MaNamHoc", OtherKey="MaNamHoc")]
		public EntitySet<LopHoc_Lop> LopHoc_Lops
		{
			get
			{
				return this._LopHoc_Lops;
			}
			set
			{
				this._LopHoc_Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHoc_Lops(LopHoc_Lop entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_NamHoc = this;
		}
		
		private void detach_LopHoc_Lops(LopHoc_Lop entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_NamHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHinh_Thu")]
	public partial class CauHinh_Thu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThu;
		
		private string _TenThu;
		
		private EntitySet<LopHoc_MonHocTKB> _LopHoc_MonHocTKBs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThuChanging(int value);
    partial void OnMaThuChanged();
    partial void OnTenThuChanging(string value);
    partial void OnTenThuChanged();
    #endregion
		
		public CauHinh_Thu()
		{
			this._LopHoc_MonHocTKBs = new EntitySet<LopHoc_MonHocTKB>(new Action<LopHoc_MonHocTKB>(this.attach_LopHoc_MonHocTKBs), new Action<LopHoc_MonHocTKB>(this.detach_LopHoc_MonHocTKBs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThu
		{
			get
			{
				return this._MaThu;
			}
			set
			{
				if ((this._MaThu != value))
				{
					this.OnMaThuChanging(value);
					this.SendPropertyChanging();
					this._MaThu = value;
					this.SendPropertyChanged("MaThu");
					this.OnMaThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThu", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenThu
		{
			get
			{
				return this._TenThu;
			}
			set
			{
				if ((this._TenThu != value))
				{
					this.OnTenThuChanging(value);
					this.SendPropertyChanging();
					this._TenThu = value;
					this.SendPropertyChanged("TenThu");
					this.OnTenThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_Thu_LopHoc_MonHocTKB", Storage="_LopHoc_MonHocTKBs", ThisKey="MaThu", OtherKey="MaThu")]
		public EntitySet<LopHoc_MonHocTKB> LopHoc_MonHocTKBs
		{
			get
			{
				return this._LopHoc_MonHocTKBs;
			}
			set
			{
				this._LopHoc_MonHocTKBs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_Thu = this;
		}
		
		private void detach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_Thu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHinh_TinhTrangYKien")]
	public partial class CauHinh_TinhTrangYKien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinhTrangYKien;
		
		private string _TenTinhTrangYKien;
		
		private EntitySet<GopY_YKien> _GopY_YKiens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhTrangYKienChanging(int value);
    partial void OnMaTinhTrangYKienChanged();
    partial void OnTenTinhTrangYKienChanging(string value);
    partial void OnTenTinhTrangYKienChanged();
    #endregion
		
		public CauHinh_TinhTrangYKien()
		{
			this._GopY_YKiens = new EntitySet<GopY_YKien>(new Action<GopY_YKien>(this.attach_GopY_YKiens), new Action<GopY_YKien>(this.detach_GopY_YKiens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinhTrangYKien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTinhTrangYKien
		{
			get
			{
				return this._MaTinhTrangYKien;
			}
			set
			{
				if ((this._MaTinhTrangYKien != value))
				{
					this.OnMaTinhTrangYKienChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrangYKien = value;
					this.SendPropertyChanged("MaTinhTrangYKien");
					this.OnMaTinhTrangYKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTinhTrangYKien", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTinhTrangYKien
		{
			get
			{
				return this._TenTinhTrangYKien;
			}
			set
			{
				if ((this._TenTinhTrangYKien != value))
				{
					this.OnTenTinhTrangYKienChanging(value);
					this.SendPropertyChanging();
					this._TenTinhTrangYKien = value;
					this.SendPropertyChanged("TenTinhTrangYKien");
					this.OnTenTinhTrangYKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_TinhTrangYKien_GopY_YKien", Storage="_GopY_YKiens", ThisKey="MaTinhTrangYKien", OtherKey="MaTinhTrangYKien")]
		public EntitySet<GopY_YKien> GopY_YKiens
		{
			get
			{
				return this._GopY_YKiens;
			}
			set
			{
				this._GopY_YKiens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GopY_YKiens(GopY_YKien entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_TinhTrangYKien = this;
		}
		
		private void detach_GopY_YKiens(GopY_YKien entity)
		{
			this.SendPropertyChanging();
			entity.CauHinh_TinhTrangYKien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc_ChiTietDanhHieu")]
	public partial class DanhMuc_ChiTietDanhHieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDanhHieu;
		
		private int _MaHocLuc;
		
		private int _MaHanhKiem;
		
		private EntityRef<DanhMuc_DanhHieu> _DanhMuc_DanhHieu;
		
		private EntityRef<DanhMuc_HanhKiem> _DanhMuc_HanhKiem;
		
		private EntityRef<DanhMuc_HocLuc> _DanhMuc_HocLuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhHieuChanging(int value);
    partial void OnMaDanhHieuChanged();
    partial void OnMaHocLucChanging(int value);
    partial void OnMaHocLucChanged();
    partial void OnMaHanhKiemChanging(int value);
    partial void OnMaHanhKiemChanged();
    #endregion
		
		public DanhMuc_ChiTietDanhHieu()
		{
			this._DanhMuc_DanhHieu = default(EntityRef<DanhMuc_DanhHieu>);
			this._DanhMuc_HanhKiem = default(EntityRef<DanhMuc_HanhKiem>);
			this._DanhMuc_HocLuc = default(EntityRef<DanhMuc_HocLuc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhHieu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDanhHieu
		{
			get
			{
				return this._MaDanhHieu;
			}
			set
			{
				if ((this._MaDanhHieu != value))
				{
					if (this._DanhMuc_DanhHieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDanhHieuChanging(value);
					this.SendPropertyChanging();
					this._MaDanhHieu = value;
					this.SendPropertyChanged("MaDanhHieu");
					this.OnMaDanhHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocLuc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHocLuc
		{
			get
			{
				return this._MaHocLuc;
			}
			set
			{
				if ((this._MaHocLuc != value))
				{
					if (this._DanhMuc_HocLuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocLucChanging(value);
					this.SendPropertyChanging();
					this._MaHocLuc = value;
					this.SendPropertyChanged("MaHocLuc");
					this.OnMaHocLucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHanhKiem", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHanhKiem
		{
			get
			{
				return this._MaHanhKiem;
			}
			set
			{
				if ((this._MaHanhKiem != value))
				{
					if (this._DanhMuc_HanhKiem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._MaHanhKiem = value;
					this.SendPropertyChanged("MaHanhKiem");
					this.OnMaHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_DanhHieu_DanhMuc_ChiTietDanhHieu", Storage="_DanhMuc_DanhHieu", ThisKey="MaDanhHieu", OtherKey="MaDanhHieu", IsForeignKey=true)]
		public DanhMuc_DanhHieu DanhMuc_DanhHieu
		{
			get
			{
				return this._DanhMuc_DanhHieu.Entity;
			}
			set
			{
				DanhMuc_DanhHieu previousValue = this._DanhMuc_DanhHieu.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc_DanhHieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc_DanhHieu.Entity = null;
						previousValue.DanhMuc_ChiTietDanhHieus.Remove(this);
					}
					this._DanhMuc_DanhHieu.Entity = value;
					if ((value != null))
					{
						value.DanhMuc_ChiTietDanhHieus.Add(this);
						this._MaDanhHieu = value.MaDanhHieu;
					}
					else
					{
						this._MaDanhHieu = default(int);
					}
					this.SendPropertyChanged("DanhMuc_DanhHieu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_HanhKiem_DanhMuc_ChiTietDanhHieu", Storage="_DanhMuc_HanhKiem", ThisKey="MaHanhKiem", OtherKey="MaHanhKiem", IsForeignKey=true)]
		public DanhMuc_HanhKiem DanhMuc_HanhKiem
		{
			get
			{
				return this._DanhMuc_HanhKiem.Entity;
			}
			set
			{
				DanhMuc_HanhKiem previousValue = this._DanhMuc_HanhKiem.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc_HanhKiem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc_HanhKiem.Entity = null;
						previousValue.DanhMuc_ChiTietDanhHieus.Remove(this);
					}
					this._DanhMuc_HanhKiem.Entity = value;
					if ((value != null))
					{
						value.DanhMuc_ChiTietDanhHieus.Add(this);
						this._MaHanhKiem = value.MaHanhKiem;
					}
					else
					{
						this._MaHanhKiem = default(int);
					}
					this.SendPropertyChanged("DanhMuc_HanhKiem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_HocLuc_DanhMuc_ChiTietDanhHieu", Storage="_DanhMuc_HocLuc", ThisKey="MaHocLuc", OtherKey="MaHocLuc", IsForeignKey=true)]
		public DanhMuc_HocLuc DanhMuc_HocLuc
		{
			get
			{
				return this._DanhMuc_HocLuc.Entity;
			}
			set
			{
				DanhMuc_HocLuc previousValue = this._DanhMuc_HocLuc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc_HocLuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc_HocLuc.Entity = null;
						previousValue.DanhMuc_ChiTietDanhHieus.Remove(this);
					}
					this._DanhMuc_HocLuc.Entity = value;
					if ((value != null))
					{
						value.DanhMuc_ChiTietDanhHieus.Add(this);
						this._MaHocLuc = value.MaHocLuc;
					}
					else
					{
						this._MaHocLuc = default(int);
					}
					this.SendPropertyChanged("DanhMuc_HocLuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc_DanhHieu")]
	public partial class DanhMuc_DanhHieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDanhHieu;
		
		private string _TenDanhHieu;
		
		private EntitySet<DanhMuc_ChiTietDanhHieu> _DanhMuc_ChiTietDanhHieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhHieuChanging(int value);
    partial void OnMaDanhHieuChanged();
    partial void OnTenDanhHieuChanging(string value);
    partial void OnTenDanhHieuChanged();
    #endregion
		
		public DanhMuc_DanhHieu()
		{
			this._DanhMuc_ChiTietDanhHieus = new EntitySet<DanhMuc_ChiTietDanhHieu>(new Action<DanhMuc_ChiTietDanhHieu>(this.attach_DanhMuc_ChiTietDanhHieus), new Action<DanhMuc_ChiTietDanhHieu>(this.detach_DanhMuc_ChiTietDanhHieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhHieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDanhHieu
		{
			get
			{
				return this._MaDanhHieu;
			}
			set
			{
				if ((this._MaDanhHieu != value))
				{
					this.OnMaDanhHieuChanging(value);
					this.SendPropertyChanging();
					this._MaDanhHieu = value;
					this.SendPropertyChanged("MaDanhHieu");
					this.OnMaDanhHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhHieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDanhHieu
		{
			get
			{
				return this._TenDanhHieu;
			}
			set
			{
				if ((this._TenDanhHieu != value))
				{
					this.OnTenDanhHieuChanging(value);
					this.SendPropertyChanging();
					this._TenDanhHieu = value;
					this.SendPropertyChanged("TenDanhHieu");
					this.OnTenDanhHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_DanhHieu_DanhMuc_ChiTietDanhHieu", Storage="_DanhMuc_ChiTietDanhHieus", ThisKey="MaDanhHieu", OtherKey="MaDanhHieu")]
		public EntitySet<DanhMuc_ChiTietDanhHieu> DanhMuc_ChiTietDanhHieus
		{
			get
			{
				return this._DanhMuc_ChiTietDanhHieus;
			}
			set
			{
				this._DanhMuc_ChiTietDanhHieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhMuc_ChiTietDanhHieus(DanhMuc_ChiTietDanhHieu entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_DanhHieu = this;
		}
		
		private void detach_DanhMuc_ChiTietDanhHieus(DanhMuc_ChiTietDanhHieu entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_DanhHieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc_HanhKiem")]
	public partial class DanhMuc_HanhKiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHanhKiem;
		
		private string _TenHanhKiem;
		
		private EntitySet<DanhMuc_ChiTietDanhHieu> _DanhMuc_ChiTietDanhHieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHanhKiemChanging(int value);
    partial void OnMaHanhKiemChanged();
    partial void OnTenHanhKiemChanging(string value);
    partial void OnTenHanhKiemChanged();
    #endregion
		
		public DanhMuc_HanhKiem()
		{
			this._DanhMuc_ChiTietDanhHieus = new EntitySet<DanhMuc_ChiTietDanhHieu>(new Action<DanhMuc_ChiTietDanhHieu>(this.attach_DanhMuc_ChiTietDanhHieus), new Action<DanhMuc_ChiTietDanhHieu>(this.detach_DanhMuc_ChiTietDanhHieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHanhKiem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHanhKiem
		{
			get
			{
				return this._MaHanhKiem;
			}
			set
			{
				if ((this._MaHanhKiem != value))
				{
					this.OnMaHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._MaHanhKiem = value;
					this.SendPropertyChanged("MaHanhKiem");
					this.OnMaHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHanhKiem", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenHanhKiem
		{
			get
			{
				return this._TenHanhKiem;
			}
			set
			{
				if ((this._TenHanhKiem != value))
				{
					this.OnTenHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._TenHanhKiem = value;
					this.SendPropertyChanged("TenHanhKiem");
					this.OnTenHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_HanhKiem_DanhMuc_ChiTietDanhHieu", Storage="_DanhMuc_ChiTietDanhHieus", ThisKey="MaHanhKiem", OtherKey="MaHanhKiem")]
		public EntitySet<DanhMuc_ChiTietDanhHieu> DanhMuc_ChiTietDanhHieus
		{
			get
			{
				return this._DanhMuc_ChiTietDanhHieus;
			}
			set
			{
				this._DanhMuc_ChiTietDanhHieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhMuc_ChiTietDanhHieus(DanhMuc_ChiTietDanhHieu entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_HanhKiem = this;
		}
		
		private void detach_DanhMuc_ChiTietDanhHieus(DanhMuc_ChiTietDanhHieu entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_HanhKiem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc_HocLuc")]
	public partial class DanhMuc_HocLuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHocLuc;
		
		private string _TenHocLuc;
		
		private double _DTBDau;
		
		private double _DTBCuoi;
		
		private EntitySet<DanhMuc_ChiTietDanhHieu> _DanhMuc_ChiTietDanhHieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocLucChanging(int value);
    partial void OnMaHocLucChanged();
    partial void OnTenHocLucChanging(string value);
    partial void OnTenHocLucChanged();
    partial void OnDTBDauChanging(double value);
    partial void OnDTBDauChanged();
    partial void OnDTBCuoiChanging(double value);
    partial void OnDTBCuoiChanged();
    #endregion
		
		public DanhMuc_HocLuc()
		{
			this._DanhMuc_ChiTietDanhHieus = new EntitySet<DanhMuc_ChiTietDanhHieu>(new Action<DanhMuc_ChiTietDanhHieu>(this.attach_DanhMuc_ChiTietDanhHieus), new Action<DanhMuc_ChiTietDanhHieu>(this.detach_DanhMuc_ChiTietDanhHieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocLuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHocLuc
		{
			get
			{
				return this._MaHocLuc;
			}
			set
			{
				if ((this._MaHocLuc != value))
				{
					this.OnMaHocLucChanging(value);
					this.SendPropertyChanging();
					this._MaHocLuc = value;
					this.SendPropertyChanged("MaHocLuc");
					this.OnMaHocLucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHocLuc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenHocLuc
		{
			get
			{
				return this._TenHocLuc;
			}
			set
			{
				if ((this._TenHocLuc != value))
				{
					this.OnTenHocLucChanging(value);
					this.SendPropertyChanging();
					this._TenHocLuc = value;
					this.SendPropertyChanged("TenHocLuc");
					this.OnTenHocLucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTBDau", DbType="Float NOT NULL")]
		public double DTBDau
		{
			get
			{
				return this._DTBDau;
			}
			set
			{
				if ((this._DTBDau != value))
				{
					this.OnDTBDauChanging(value);
					this.SendPropertyChanging();
					this._DTBDau = value;
					this.SendPropertyChanged("DTBDau");
					this.OnDTBDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTBCuoi", DbType="Float NOT NULL")]
		public double DTBCuoi
		{
			get
			{
				return this._DTBCuoi;
			}
			set
			{
				if ((this._DTBCuoi != value))
				{
					this.OnDTBCuoiChanging(value);
					this.SendPropertyChanging();
					this._DTBCuoi = value;
					this.SendPropertyChanged("DTBCuoi");
					this.OnDTBCuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_HocLuc_DanhMuc_ChiTietDanhHieu", Storage="_DanhMuc_ChiTietDanhHieus", ThisKey="MaHocLuc", OtherKey="MaHocLuc")]
		public EntitySet<DanhMuc_ChiTietDanhHieu> DanhMuc_ChiTietDanhHieus
		{
			get
			{
				return this._DanhMuc_ChiTietDanhHieus;
			}
			set
			{
				this._DanhMuc_ChiTietDanhHieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhMuc_ChiTietDanhHieus(DanhMuc_ChiTietDanhHieu entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_HocLuc = this;
		}
		
		private void detach_DanhMuc_ChiTietDanhHieus(DanhMuc_ChiTietDanhHieu entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_HocLuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc_KhoiLop")]
	public partial class DanhMuc_KhoiLop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhoiLop;
		
		private string _TenKhoiLop;
		
		private short _ThuTuHienThi;
		
		private EntitySet<DanhMuc_MonHoc> _DanhMuc_MonHocs;
		
		private EntitySet<LopHoc_Lop> _LopHoc_Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoiLopChanging(int value);
    partial void OnMaKhoiLopChanged();
    partial void OnTenKhoiLopChanging(string value);
    partial void OnTenKhoiLopChanged();
    partial void OnThuTuHienThiChanging(short value);
    partial void OnThuTuHienThiChanged();
    #endregion
		
		public DanhMuc_KhoiLop()
		{
			this._DanhMuc_MonHocs = new EntitySet<DanhMuc_MonHoc>(new Action<DanhMuc_MonHoc>(this.attach_DanhMuc_MonHocs), new Action<DanhMuc_MonHoc>(this.detach_DanhMuc_MonHocs));
			this._LopHoc_Lops = new EntitySet<LopHoc_Lop>(new Action<LopHoc_Lop>(this.attach_LopHoc_Lops), new Action<LopHoc_Lop>(this.detach_LopHoc_Lops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoiLop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKhoiLop
		{
			get
			{
				return this._MaKhoiLop;
			}
			set
			{
				if ((this._MaKhoiLop != value))
				{
					this.OnMaKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._MaKhoiLop = value;
					this.SendPropertyChanged("MaKhoiLop");
					this.OnMaKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoiLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenKhoiLop
		{
			get
			{
				return this._TenKhoiLop;
			}
			set
			{
				if ((this._TenKhoiLop != value))
				{
					this.OnTenKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._TenKhoiLop = value;
					this.SendPropertyChanged("TenKhoiLop");
					this.OnTenKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTuHienThi", DbType="SmallInt NOT NULL")]
		public short ThuTuHienThi
		{
			get
			{
				return this._ThuTuHienThi;
			}
			set
			{
				if ((this._ThuTuHienThi != value))
				{
					this.OnThuTuHienThiChanging(value);
					this.SendPropertyChanging();
					this._ThuTuHienThi = value;
					this.SendPropertyChanged("ThuTuHienThi");
					this.OnThuTuHienThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_KhoiLop_DanhMuc_MonHoc", Storage="_DanhMuc_MonHocs", ThisKey="MaKhoiLop", OtherKey="MaKhoiLop")]
		public EntitySet<DanhMuc_MonHoc> DanhMuc_MonHocs
		{
			get
			{
				return this._DanhMuc_MonHocs;
			}
			set
			{
				this._DanhMuc_MonHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_KhoiLop_LopHoc_Lop", Storage="_LopHoc_Lops", ThisKey="MaKhoiLop", OtherKey="MaKhoiLop")]
		public EntitySet<LopHoc_Lop> LopHoc_Lops
		{
			get
			{
				return this._LopHoc_Lops;
			}
			set
			{
				this._LopHoc_Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhMuc_MonHocs(DanhMuc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_KhoiLop = this;
		}
		
		private void detach_DanhMuc_MonHocs(DanhMuc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_KhoiLop = null;
		}
		
		private void attach_LopHoc_Lops(LopHoc_Lop entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_KhoiLop = this;
		}
		
		private void detach_LopHoc_Lops(LopHoc_Lop entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_KhoiLop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc_LoaiDiem")]
	public partial class DanhMuc_LoaiDiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiDiem;
		
		private string _TenLoaiDiem;
		
		private double _HeSoDiem;
		
		private short _SoCotToiDa;
		
		private bool _TinhDTB;
		
		private EntitySet<HocSinh_ChiTietDiem> _HocSinh_ChiTietDiems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiDiemChanging(int value);
    partial void OnMaLoaiDiemChanged();
    partial void OnTenLoaiDiemChanging(string value);
    partial void OnTenLoaiDiemChanged();
    partial void OnHeSoDiemChanging(double value);
    partial void OnHeSoDiemChanged();
    partial void OnSoCotToiDaChanging(short value);
    partial void OnSoCotToiDaChanged();
    partial void OnTinhDTBChanging(bool value);
    partial void OnTinhDTBChanged();
    #endregion
		
		public DanhMuc_LoaiDiem()
		{
			this._HocSinh_ChiTietDiems = new EntitySet<HocSinh_ChiTietDiem>(new Action<HocSinh_ChiTietDiem>(this.attach_HocSinh_ChiTietDiems), new Action<HocSinh_ChiTietDiem>(this.detach_HocSinh_ChiTietDiems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiDiem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiDiem
		{
			get
			{
				return this._MaLoaiDiem;
			}
			set
			{
				if ((this._MaLoaiDiem != value))
				{
					this.OnMaLoaiDiemChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiDiem = value;
					this.SendPropertyChanged("MaLoaiDiem");
					this.OnMaLoaiDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiDiem", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoaiDiem
		{
			get
			{
				return this._TenLoaiDiem;
			}
			set
			{
				if ((this._TenLoaiDiem != value))
				{
					this.OnTenLoaiDiemChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiDiem = value;
					this.SendPropertyChanged("TenLoaiDiem");
					this.OnTenLoaiDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSoDiem", DbType="Float NOT NULL")]
		public double HeSoDiem
		{
			get
			{
				return this._HeSoDiem;
			}
			set
			{
				if ((this._HeSoDiem != value))
				{
					this.OnHeSoDiemChanging(value);
					this.SendPropertyChanging();
					this._HeSoDiem = value;
					this.SendPropertyChanged("HeSoDiem");
					this.OnHeSoDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCotToiDa", DbType="SmallInt NOT NULL")]
		public short SoCotToiDa
		{
			get
			{
				return this._SoCotToiDa;
			}
			set
			{
				if ((this._SoCotToiDa != value))
				{
					this.OnSoCotToiDaChanging(value);
					this.SendPropertyChanging();
					this._SoCotToiDa = value;
					this.SendPropertyChanged("SoCotToiDa");
					this.OnSoCotToiDaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhDTB", DbType="Bit NOT NULL")]
		public bool TinhDTB
		{
			get
			{
				return this._TinhDTB;
			}
			set
			{
				if ((this._TinhDTB != value))
				{
					this.OnTinhDTBChanging(value);
					this.SendPropertyChanging();
					this._TinhDTB = value;
					this.SendPropertyChanged("TinhDTB");
					this.OnTinhDTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_LoaiDiem_HocSinh_ChiTietDiem", Storage="_HocSinh_ChiTietDiems", ThisKey="MaLoaiDiem", OtherKey="MaLoaiDiem")]
		public EntitySet<HocSinh_ChiTietDiem> HocSinh_ChiTietDiems
		{
			get
			{
				return this._HocSinh_ChiTietDiems;
			}
			set
			{
				this._HocSinh_ChiTietDiems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinh_ChiTietDiems(HocSinh_ChiTietDiem entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_LoaiDiem = this;
		}
		
		private void detach_HocSinh_ChiTietDiems(HocSinh_ChiTietDiem entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_LoaiDiem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc_MonHoc")]
	public partial class DanhMuc_MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMonHoc;
		
		private string _TenMonHoc;
		
		private int _MaNganhHoc;
		
		private int _MaKhoiLop;
		
		private double _HeSoDiem;
		
		private EntitySet<HocSinh_DiemMonHocHocKy> _HocSinh_DiemMonHocHocKies;
		
		private EntitySet<LopHoc_MonHocTKB> _LopHoc_MonHocTKBs;
		
		private EntityRef<DanhMuc_KhoiLop> _DanhMuc_KhoiLop;
		
		private EntityRef<DanhMuc_NganhHoc> _DanhMuc_NganhHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonHocChanging(int value);
    partial void OnMaMonHocChanged();
    partial void OnTenMonHocChanging(string value);
    partial void OnTenMonHocChanged();
    partial void OnMaNganhHocChanging(int value);
    partial void OnMaNganhHocChanged();
    partial void OnMaKhoiLopChanging(int value);
    partial void OnMaKhoiLopChanged();
    partial void OnHeSoDiemChanging(double value);
    partial void OnHeSoDiemChanged();
    #endregion
		
		public DanhMuc_MonHoc()
		{
			this._HocSinh_DiemMonHocHocKies = new EntitySet<HocSinh_DiemMonHocHocKy>(new Action<HocSinh_DiemMonHocHocKy>(this.attach_HocSinh_DiemMonHocHocKies), new Action<HocSinh_DiemMonHocHocKy>(this.detach_HocSinh_DiemMonHocHocKies));
			this._LopHoc_MonHocTKBs = new EntitySet<LopHoc_MonHocTKB>(new Action<LopHoc_MonHocTKB>(this.attach_LopHoc_MonHocTKBs), new Action<LopHoc_MonHocTKB>(this.detach_LopHoc_MonHocTKBs));
			this._DanhMuc_KhoiLop = default(EntityRef<DanhMuc_KhoiLop>);
			this._DanhMuc_NganhHoc = default(EntityRef<DanhMuc_NganhHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMonHoc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMonHoc
		{
			get
			{
				return this._TenMonHoc;
			}
			set
			{
				if ((this._TenMonHoc != value))
				{
					this.OnTenMonHocChanging(value);
					this.SendPropertyChanging();
					this._TenMonHoc = value;
					this.SendPropertyChanged("TenMonHoc");
					this.OnTenMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNganhHoc", DbType="Int NOT NULL")]
		public int MaNganhHoc
		{
			get
			{
				return this._MaNganhHoc;
			}
			set
			{
				if ((this._MaNganhHoc != value))
				{
					if (this._DanhMuc_NganhHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNganhHocChanging(value);
					this.SendPropertyChanging();
					this._MaNganhHoc = value;
					this.SendPropertyChanged("MaNganhHoc");
					this.OnMaNganhHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoiLop", DbType="Int NOT NULL")]
		public int MaKhoiLop
		{
			get
			{
				return this._MaKhoiLop;
			}
			set
			{
				if ((this._MaKhoiLop != value))
				{
					if (this._DanhMuc_KhoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._MaKhoiLop = value;
					this.SendPropertyChanged("MaKhoiLop");
					this.OnMaKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSoDiem", DbType="Float NOT NULL")]
		public double HeSoDiem
		{
			get
			{
				return this._HeSoDiem;
			}
			set
			{
				if ((this._HeSoDiem != value))
				{
					this.OnHeSoDiemChanging(value);
					this.SendPropertyChanging();
					this._HeSoDiem = value;
					this.SendPropertyChanged("HeSoDiem");
					this.OnHeSoDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_MonHoc_HocSinh_DiemMonHocHocKy", Storage="_HocSinh_DiemMonHocHocKies", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<HocSinh_DiemMonHocHocKy> HocSinh_DiemMonHocHocKies
		{
			get
			{
				return this._HocSinh_DiemMonHocHocKies;
			}
			set
			{
				this._HocSinh_DiemMonHocHocKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_MonHoc_LopHoc_MonHocTKB", Storage="_LopHoc_MonHocTKBs", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<LopHoc_MonHocTKB> LopHoc_MonHocTKBs
		{
			get
			{
				return this._LopHoc_MonHocTKBs;
			}
			set
			{
				this._LopHoc_MonHocTKBs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_KhoiLop_DanhMuc_MonHoc", Storage="_DanhMuc_KhoiLop", ThisKey="MaKhoiLop", OtherKey="MaKhoiLop", IsForeignKey=true)]
		public DanhMuc_KhoiLop DanhMuc_KhoiLop
		{
			get
			{
				return this._DanhMuc_KhoiLop.Entity;
			}
			set
			{
				DanhMuc_KhoiLop previousValue = this._DanhMuc_KhoiLop.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc_KhoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc_KhoiLop.Entity = null;
						previousValue.DanhMuc_MonHocs.Remove(this);
					}
					this._DanhMuc_KhoiLop.Entity = value;
					if ((value != null))
					{
						value.DanhMuc_MonHocs.Add(this);
						this._MaKhoiLop = value.MaKhoiLop;
					}
					else
					{
						this._MaKhoiLop = default(int);
					}
					this.SendPropertyChanged("DanhMuc_KhoiLop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_NganhHoc_DanhMuc_MonHoc", Storage="_DanhMuc_NganhHoc", ThisKey="MaNganhHoc", OtherKey="MaNganhHoc", IsForeignKey=true)]
		public DanhMuc_NganhHoc DanhMuc_NganhHoc
		{
			get
			{
				return this._DanhMuc_NganhHoc.Entity;
			}
			set
			{
				DanhMuc_NganhHoc previousValue = this._DanhMuc_NganhHoc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc_NganhHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc_NganhHoc.Entity = null;
						previousValue.DanhMuc_MonHocs.Remove(this);
					}
					this._DanhMuc_NganhHoc.Entity = value;
					if ((value != null))
					{
						value.DanhMuc_MonHocs.Add(this);
						this._MaNganhHoc = value.MaNganhHoc;
					}
					else
					{
						this._MaNganhHoc = default(int);
					}
					this.SendPropertyChanged("DanhMuc_NganhHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinh_DiemMonHocHocKies(HocSinh_DiemMonHocHocKy entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_MonHoc = this;
		}
		
		private void detach_HocSinh_DiemMonHocHocKies(HocSinh_DiemMonHocHocKy entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_MonHoc = null;
		}
		
		private void attach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_MonHoc = this;
		}
		
		private void detach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc_NganhHoc")]
	public partial class DanhMuc_NganhHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNganhHoc;
		
		private string _TenNganhHoc;
		
		private string _MoTa;
		
		private EntitySet<DanhMuc_MonHoc> _DanhMuc_MonHocs;
		
		private EntitySet<LopHoc_Lop> _LopHoc_Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNganhHocChanging(int value);
    partial void OnMaNganhHocChanged();
    partial void OnTenNganhHocChanging(string value);
    partial void OnTenNganhHocChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public DanhMuc_NganhHoc()
		{
			this._DanhMuc_MonHocs = new EntitySet<DanhMuc_MonHoc>(new Action<DanhMuc_MonHoc>(this.attach_DanhMuc_MonHocs), new Action<DanhMuc_MonHoc>(this.detach_DanhMuc_MonHocs));
			this._LopHoc_Lops = new EntitySet<LopHoc_Lop>(new Action<LopHoc_Lop>(this.attach_LopHoc_Lops), new Action<LopHoc_Lop>(this.detach_LopHoc_Lops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNganhHoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNganhHoc
		{
			get
			{
				return this._MaNganhHoc;
			}
			set
			{
				if ((this._MaNganhHoc != value))
				{
					this.OnMaNganhHocChanging(value);
					this.SendPropertyChanging();
					this._MaNganhHoc = value;
					this.SendPropertyChanged("MaNganhHoc");
					this.OnMaNganhHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNganhHoc", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNganhHoc
		{
			get
			{
				return this._TenNganhHoc;
			}
			set
			{
				if ((this._TenNganhHoc != value))
				{
					this.OnTenNganhHocChanging(value);
					this.SendPropertyChanging();
					this._TenNganhHoc = value;
					this.SendPropertyChanged("TenNganhHoc");
					this.OnTenNganhHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(200)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_NganhHoc_DanhMuc_MonHoc", Storage="_DanhMuc_MonHocs", ThisKey="MaNganhHoc", OtherKey="MaNganhHoc")]
		public EntitySet<DanhMuc_MonHoc> DanhMuc_MonHocs
		{
			get
			{
				return this._DanhMuc_MonHocs;
			}
			set
			{
				this._DanhMuc_MonHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_NganhHoc_LopHoc_Lop", Storage="_LopHoc_Lops", ThisKey="MaNganhHoc", OtherKey="MaNganhHoc")]
		public EntitySet<LopHoc_Lop> LopHoc_Lops
		{
			get
			{
				return this._LopHoc_Lops;
			}
			set
			{
				this._LopHoc_Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhMuc_MonHocs(DanhMuc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_NganhHoc = this;
		}
		
		private void detach_DanhMuc_MonHocs(DanhMuc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_NganhHoc = null;
		}
		
		private void attach_LopHoc_Lops(LopHoc_Lop entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_NganhHoc = this;
		}
		
		private void detach_LopHoc_Lops(LopHoc_Lop entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_NganhHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc_ThaiDoThamGia")]
	public partial class DanhMuc_ThaiDoThamGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThaiDoThamGia;
		
		private string _TenThaiDoThamGia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThaiDoThamGiaChanging(int value);
    partial void OnMaThaiDoThamGiaChanged();
    partial void OnTenThaiDoThamGiaChanging(string value);
    partial void OnTenThaiDoThamGiaChanged();
    #endregion
		
		public DanhMuc_ThaiDoThamGia()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThaiDoThamGia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThaiDoThamGia
		{
			get
			{
				return this._MaThaiDoThamGia;
			}
			set
			{
				if ((this._MaThaiDoThamGia != value))
				{
					this.OnMaThaiDoThamGiaChanging(value);
					this.SendPropertyChanging();
					this._MaThaiDoThamGia = value;
					this.SendPropertyChanged("MaThaiDoThamGia");
					this.OnMaThaiDoThamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThaiDoThamGia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenThaiDoThamGia
		{
			get
			{
				return this._TenThaiDoThamGia;
			}
			set
			{
				if ((this._TenThaiDoThamGia != value))
				{
					this.OnTenThaiDoThamGiaChanging(value);
					this.SendPropertyChanging();
					this._TenThaiDoThamGia = value;
					this.SendPropertyChanged("TenThaiDoThamGia");
					this.OnTenThaiDoThamGiaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc_Tiet")]
	public partial class DanhMuc_Tiet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTiet;
		
		private string _TenTiet;
		
		private int _MaBuoi;
		
		private int _ThuTu;
		
		private System.DateTime _ThoiGianBatDau;
		
		private System.DateTime _ThoiDiemKetThu;
		
		private EntitySet<LopHoc_MonHocTKB> _LopHoc_MonHocTKBs;
		
		private EntityRef<CauHinh_Buoi> _CauHinh_Buoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTietChanging(int value);
    partial void OnMaTietChanged();
    partial void OnTenTietChanging(string value);
    partial void OnTenTietChanged();
    partial void OnMaBuoiChanging(int value);
    partial void OnMaBuoiChanged();
    partial void OnThuTuChanging(int value);
    partial void OnThuTuChanged();
    partial void OnThoiGianBatDauChanging(System.DateTime value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiDiemKetThuChanging(System.DateTime value);
    partial void OnThoiDiemKetThuChanged();
    #endregion
		
		public DanhMuc_Tiet()
		{
			this._LopHoc_MonHocTKBs = new EntitySet<LopHoc_MonHocTKB>(new Action<LopHoc_MonHocTKB>(this.attach_LopHoc_MonHocTKBs), new Action<LopHoc_MonHocTKB>(this.detach_LopHoc_MonHocTKBs));
			this._CauHinh_Buoi = default(EntityRef<CauHinh_Buoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTiet", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTiet
		{
			get
			{
				return this._MaTiet;
			}
			set
			{
				if ((this._MaTiet != value))
				{
					this.OnMaTietChanging(value);
					this.SendPropertyChanging();
					this._MaTiet = value;
					this.SendPropertyChanged("MaTiet");
					this.OnMaTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTiet", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTiet
		{
			get
			{
				return this._TenTiet;
			}
			set
			{
				if ((this._TenTiet != value))
				{
					this.OnTenTietChanging(value);
					this.SendPropertyChanging();
					this._TenTiet = value;
					this.SendPropertyChanged("TenTiet");
					this.OnTenTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBuoi", DbType="Int NOT NULL")]
		public int MaBuoi
		{
			get
			{
				return this._MaBuoi;
			}
			set
			{
				if ((this._MaBuoi != value))
				{
					if (this._CauHinh_Buoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBuoiChanging(value);
					this.SendPropertyChanging();
					this._MaBuoi = value;
					this.SendPropertyChanged("MaBuoi");
					this.OnMaBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTu", DbType="Int NOT NULL")]
		public int ThuTu
		{
			get
			{
				return this._ThuTu;
			}
			set
			{
				if ((this._ThuTu != value))
				{
					this.OnThuTuChanging(value);
					this.SendPropertyChanging();
					this._ThuTu = value;
					this.SendPropertyChanged("ThuTu");
					this.OnThuTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiDiemKetThu", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiDiemKetThu
		{
			get
			{
				return this._ThoiDiemKetThu;
			}
			set
			{
				if ((this._ThoiDiemKetThu != value))
				{
					this.OnThoiDiemKetThuChanging(value);
					this.SendPropertyChanging();
					this._ThoiDiemKetThu = value;
					this.SendPropertyChanged("ThoiDiemKetThu");
					this.OnThoiDiemKetThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_Tiet_LopHoc_MonHocTKB", Storage="_LopHoc_MonHocTKBs", ThisKey="MaTiet", OtherKey="MaTiet")]
		public EntitySet<LopHoc_MonHocTKB> LopHoc_MonHocTKBs
		{
			get
			{
				return this._LopHoc_MonHocTKBs;
			}
			set
			{
				this._LopHoc_MonHocTKBs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_Buoi_DanhMuc_Tiet", Storage="_CauHinh_Buoi", ThisKey="MaBuoi", OtherKey="MaBuoi", IsForeignKey=true)]
		public CauHinh_Buoi CauHinh_Buoi
		{
			get
			{
				return this._CauHinh_Buoi.Entity;
			}
			set
			{
				CauHinh_Buoi previousValue = this._CauHinh_Buoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_Buoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_Buoi.Entity = null;
						previousValue.DanhMuc_Tiets.Remove(this);
					}
					this._CauHinh_Buoi.Entity = value;
					if ((value != null))
					{
						value.DanhMuc_Tiets.Add(this);
						this._MaBuoi = value.MaBuoi;
					}
					else
					{
						this._MaBuoi = default(int);
					}
					this.SendPropertyChanged("CauHinh_Buoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_Tiet = this;
		}
		
		private void detach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc_Tiet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GopY_YKien")]
	public partial class GopY_YKien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaYKien;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private string _PhanHoi;
		
		private int _MaTinhTrangYKien;
		
		private int _MaHocSinhLopHoc;
		
		private EntityRef<CauHinh_TinhTrangYKien> _CauHinh_TinhTrangYKien;
		
		private EntityRef<HocSinh_HocSinhLopHoc> _HocSinh_HocSinhLopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaYKienChanging(int value);
    partial void OnMaYKienChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnPhanHoiChanging(string value);
    partial void OnPhanHoiChanged();
    partial void OnMaTinhTrangYKienChanging(int value);
    partial void OnMaTinhTrangYKienChanged();
    partial void OnMaHocSinhLopHocChanging(int value);
    partial void OnMaHocSinhLopHocChanged();
    #endregion
		
		public GopY_YKien()
		{
			this._CauHinh_TinhTrangYKien = default(EntityRef<CauHinh_TinhTrangYKien>);
			this._HocSinh_HocSinhLopHoc = default(EntityRef<HocSinh_HocSinhLopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaYKien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaYKien
		{
			get
			{
				return this._MaYKien;
			}
			set
			{
				if ((this._MaYKien != value))
				{
					this.OnMaYKienChanging(value);
					this.SendPropertyChanging();
					this._MaYKien = value;
					this.SendPropertyChanged("MaYKien");
					this.OnMaYKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanHoi", DbType="NVarChar(300)")]
		public string PhanHoi
		{
			get
			{
				return this._PhanHoi;
			}
			set
			{
				if ((this._PhanHoi != value))
				{
					this.OnPhanHoiChanging(value);
					this.SendPropertyChanging();
					this._PhanHoi = value;
					this.SendPropertyChanged("PhanHoi");
					this.OnPhanHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinhTrangYKien", DbType="Int NOT NULL")]
		public int MaTinhTrangYKien
		{
			get
			{
				return this._MaTinhTrangYKien;
			}
			set
			{
				if ((this._MaTinhTrangYKien != value))
				{
					if (this._CauHinh_TinhTrangYKien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTinhTrangYKienChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrangYKien = value;
					this.SendPropertyChanged("MaTinhTrangYKien");
					this.OnMaTinhTrangYKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinhLopHoc", DbType="Int NOT NULL")]
		public int MaHocSinhLopHoc
		{
			get
			{
				return this._MaHocSinhLopHoc;
			}
			set
			{
				if ((this._MaHocSinhLopHoc != value))
				{
					if (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinhLopHoc = value;
					this.SendPropertyChanged("MaHocSinhLopHoc");
					this.OnMaHocSinhLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_TinhTrangYKien_GopY_YKien", Storage="_CauHinh_TinhTrangYKien", ThisKey="MaTinhTrangYKien", OtherKey="MaTinhTrangYKien", IsForeignKey=true)]
		public CauHinh_TinhTrangYKien CauHinh_TinhTrangYKien
		{
			get
			{
				return this._CauHinh_TinhTrangYKien.Entity;
			}
			set
			{
				CauHinh_TinhTrangYKien previousValue = this._CauHinh_TinhTrangYKien.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_TinhTrangYKien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_TinhTrangYKien.Entity = null;
						previousValue.GopY_YKiens.Remove(this);
					}
					this._CauHinh_TinhTrangYKien.Entity = value;
					if ((value != null))
					{
						value.GopY_YKiens.Add(this);
						this._MaTinhTrangYKien = value.MaTinhTrangYKien;
					}
					else
					{
						this._MaTinhTrangYKien = default(int);
					}
					this.SendPropertyChanged("CauHinh_TinhTrangYKien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_GopY_YKien", Storage="_HocSinh_HocSinhLopHoc", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc", IsForeignKey=true)]
		public HocSinh_HocSinhLopHoc HocSinh_HocSinhLopHoc
		{
			get
			{
				return this._HocSinh_HocSinhLopHoc.Entity;
			}
			set
			{
				HocSinh_HocSinhLopHoc previousValue = this._HocSinh_HocSinhLopHoc.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh_HocSinhLopHoc.Entity = null;
						previousValue.GopY_YKiens.Remove(this);
					}
					this._HocSinh_HocSinhLopHoc.Entity = value;
					if ((value != null))
					{
						value.GopY_YKiens.Add(this);
						this._MaHocSinhLopHoc = value.MaHocSinhLopHoc;
					}
					else
					{
						this._MaHocSinhLopHoc = default(int);
					}
					this.SendPropertyChanged("HocSinh_HocSinhLopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh_ChiTietDiem")]
	public partial class HocSinh_ChiTietDiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChiTietDiem;
		
		private int _MaDiemMonHK;
		
		private int _MaLoaiDiem;
		
		private double _Diem;
		
		private EntityRef<DanhMuc_LoaiDiem> _DanhMuc_LoaiDiem;
		
		private EntityRef<HocSinh_DiemMonHocHocKy> _HocSinh_DiemMonHocHocKy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietDiemChanging(int value);
    partial void OnMaChiTietDiemChanged();
    partial void OnMaDiemMonHKChanging(int value);
    partial void OnMaDiemMonHKChanged();
    partial void OnMaLoaiDiemChanging(int value);
    partial void OnMaLoaiDiemChanged();
    partial void OnDiemChanging(double value);
    partial void OnDiemChanged();
    #endregion
		
		public HocSinh_ChiTietDiem()
		{
			this._DanhMuc_LoaiDiem = default(EntityRef<DanhMuc_LoaiDiem>);
			this._HocSinh_DiemMonHocHocKy = default(EntityRef<HocSinh_DiemMonHocHocKy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietDiem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChiTietDiem
		{
			get
			{
				return this._MaChiTietDiem;
			}
			set
			{
				if ((this._MaChiTietDiem != value))
				{
					this.OnMaChiTietDiemChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietDiem = value;
					this.SendPropertyChanged("MaChiTietDiem");
					this.OnMaChiTietDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDiemMonHK", DbType="Int NOT NULL")]
		public int MaDiemMonHK
		{
			get
			{
				return this._MaDiemMonHK;
			}
			set
			{
				if ((this._MaDiemMonHK != value))
				{
					if (this._HocSinh_DiemMonHocHocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDiemMonHKChanging(value);
					this.SendPropertyChanging();
					this._MaDiemMonHK = value;
					this.SendPropertyChanged("MaDiemMonHK");
					this.OnMaDiemMonHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiDiem", DbType="Int NOT NULL")]
		public int MaLoaiDiem
		{
			get
			{
				return this._MaLoaiDiem;
			}
			set
			{
				if ((this._MaLoaiDiem != value))
				{
					if (this._DanhMuc_LoaiDiem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiDiemChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiDiem = value;
					this.SendPropertyChanged("MaLoaiDiem");
					this.OnMaLoaiDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Float NOT NULL")]
		public double Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_LoaiDiem_HocSinh_ChiTietDiem", Storage="_DanhMuc_LoaiDiem", ThisKey="MaLoaiDiem", OtherKey="MaLoaiDiem", IsForeignKey=true)]
		public DanhMuc_LoaiDiem DanhMuc_LoaiDiem
		{
			get
			{
				return this._DanhMuc_LoaiDiem.Entity;
			}
			set
			{
				DanhMuc_LoaiDiem previousValue = this._DanhMuc_LoaiDiem.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc_LoaiDiem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc_LoaiDiem.Entity = null;
						previousValue.HocSinh_ChiTietDiems.Remove(this);
					}
					this._DanhMuc_LoaiDiem.Entity = value;
					if ((value != null))
					{
						value.HocSinh_ChiTietDiems.Add(this);
						this._MaLoaiDiem = value.MaLoaiDiem;
					}
					else
					{
						this._MaLoaiDiem = default(int);
					}
					this.SendPropertyChanged("DanhMuc_LoaiDiem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DiemMonHocHocKy_HocSinh_ChiTietDiem", Storage="_HocSinh_DiemMonHocHocKy", ThisKey="MaDiemMonHK", OtherKey="MaDiemMonHK", IsForeignKey=true)]
		public HocSinh_DiemMonHocHocKy HocSinh_DiemMonHocHocKy
		{
			get
			{
				return this._HocSinh_DiemMonHocHocKy.Entity;
			}
			set
			{
				HocSinh_DiemMonHocHocKy previousValue = this._HocSinh_DiemMonHocHocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh_DiemMonHocHocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh_DiemMonHocHocKy.Entity = null;
						previousValue.HocSinh_ChiTietDiems.Remove(this);
					}
					this._HocSinh_DiemMonHocHocKy.Entity = value;
					if ((value != null))
					{
						value.HocSinh_ChiTietDiems.Add(this);
						this._MaDiemMonHK = value.MaDiemMonHK;
					}
					else
					{
						this._MaDiemMonHK = default(int);
					}
					this.SendPropertyChanged("HocSinh_DiemMonHocHocKy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh_DanhHieuHocKy")]
	public partial class HocSinh_DanhHieuHocKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDanhHieuHSHK;
		
		private int _MaHocKy;
		
		private int _MaHocSinhLopHoc;
		
		private System.Nullable<double> _DiemTBHK;
		
		private System.Nullable<int> _MaHocLucHK;
		
		private System.Nullable<int> _MaHanhKiemHK;
		
		private EntityRef<CauHinh_HocKy> _CauHinh_HocKy;
		
		private EntityRef<HocSinh_HocSinhLopHoc> _HocSinh_HocSinhLopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhHieuHSHKChanging(int value);
    partial void OnMaDanhHieuHSHKChanged();
    partial void OnMaHocKyChanging(int value);
    partial void OnMaHocKyChanged();
    partial void OnMaHocSinhLopHocChanging(int value);
    partial void OnMaHocSinhLopHocChanged();
    partial void OnDiemTBHKChanging(System.Nullable<double> value);
    partial void OnDiemTBHKChanged();
    partial void OnMaHocLucHKChanging(System.Nullable<int> value);
    partial void OnMaHocLucHKChanged();
    partial void OnMaHanhKiemHKChanging(System.Nullable<int> value);
    partial void OnMaHanhKiemHKChanged();
    #endregion
		
		public HocSinh_DanhHieuHocKy()
		{
			this._CauHinh_HocKy = default(EntityRef<CauHinh_HocKy>);
			this._HocSinh_HocSinhLopHoc = default(EntityRef<HocSinh_HocSinhLopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhHieuHSHK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDanhHieuHSHK
		{
			get
			{
				return this._MaDanhHieuHSHK;
			}
			set
			{
				if ((this._MaDanhHieuHSHK != value))
				{
					this.OnMaDanhHieuHSHKChanging(value);
					this.SendPropertyChanging();
					this._MaDanhHieuHSHK = value;
					this.SendPropertyChanged("MaDanhHieuHSHK");
					this.OnMaDanhHieuHSHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="Int NOT NULL")]
		public int MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._CauHinh_HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinhLopHoc", DbType="Int NOT NULL")]
		public int MaHocSinhLopHoc
		{
			get
			{
				return this._MaHocSinhLopHoc;
			}
			set
			{
				if ((this._MaHocSinhLopHoc != value))
				{
					if (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinhLopHoc = value;
					this.SendPropertyChanged("MaHocSinhLopHoc");
					this.OnMaHocSinhLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTBHK", DbType="Float")]
		public System.Nullable<double> DiemTBHK
		{
			get
			{
				return this._DiemTBHK;
			}
			set
			{
				if ((this._DiemTBHK != value))
				{
					this.OnDiemTBHKChanging(value);
					this.SendPropertyChanging();
					this._DiemTBHK = value;
					this.SendPropertyChanged("DiemTBHK");
					this.OnDiemTBHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocLucHK", DbType="Int")]
		public System.Nullable<int> MaHocLucHK
		{
			get
			{
				return this._MaHocLucHK;
			}
			set
			{
				if ((this._MaHocLucHK != value))
				{
					this.OnMaHocLucHKChanging(value);
					this.SendPropertyChanging();
					this._MaHocLucHK = value;
					this.SendPropertyChanged("MaHocLucHK");
					this.OnMaHocLucHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHanhKiemHK", DbType="Int")]
		public System.Nullable<int> MaHanhKiemHK
		{
			get
			{
				return this._MaHanhKiemHK;
			}
			set
			{
				if ((this._MaHanhKiemHK != value))
				{
					this.OnMaHanhKiemHKChanging(value);
					this.SendPropertyChanging();
					this._MaHanhKiemHK = value;
					this.SendPropertyChanged("MaHanhKiemHK");
					this.OnMaHanhKiemHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_HocSinh_DanhHieuHocKy", Storage="_CauHinh_HocKy", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public CauHinh_HocKy CauHinh_HocKy
		{
			get
			{
				return this._CauHinh_HocKy.Entity;
			}
			set
			{
				CauHinh_HocKy previousValue = this._CauHinh_HocKy.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_HocKy.Entity = null;
						previousValue.HocSinh_DanhHieuHocKies.Remove(this);
					}
					this._CauHinh_HocKy.Entity = value;
					if ((value != null))
					{
						value.HocSinh_DanhHieuHocKies.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(int);
					}
					this.SendPropertyChanged("CauHinh_HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_HocSinh_DanhHieuHocKy", Storage="_HocSinh_HocSinhLopHoc", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc", IsForeignKey=true)]
		public HocSinh_HocSinhLopHoc HocSinh_HocSinhLopHoc
		{
			get
			{
				return this._HocSinh_HocSinhLopHoc.Entity;
			}
			set
			{
				HocSinh_HocSinhLopHoc previousValue = this._HocSinh_HocSinhLopHoc.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh_HocSinhLopHoc.Entity = null;
						previousValue.HocSinh_DanhHieuHocKies.Remove(this);
					}
					this._HocSinh_HocSinhLopHoc.Entity = value;
					if ((value != null))
					{
						value.HocSinh_DanhHieuHocKies.Add(this);
						this._MaHocSinhLopHoc = value.MaHocSinhLopHoc;
					}
					else
					{
						this._MaHocSinhLopHoc = default(int);
					}
					this.SendPropertyChanged("HocSinh_HocSinhLopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh_DiemMonHocHocKy")]
	public partial class HocSinh_DiemMonHocHocKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDiemMonHK;
		
		private int _MaHocSinhLopHoc;
		
		private int _MaMonHoc;
		
		private double _DiemTB;
		
		private int _MaHocKy;
		
		private EntitySet<HocSinh_ChiTietDiem> _HocSinh_ChiTietDiems;
		
		private EntityRef<CauHinh_HocKy> _CauHinh_HocKy;
		
		private EntityRef<DanhMuc_MonHoc> _DanhMuc_MonHoc;
		
		private EntityRef<HocSinh_HocSinhLopHoc> _HocSinh_HocSinhLopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDiemMonHKChanging(int value);
    partial void OnMaDiemMonHKChanged();
    partial void OnMaHocSinhLopHocChanging(int value);
    partial void OnMaHocSinhLopHocChanged();
    partial void OnMaMonHocChanging(int value);
    partial void OnMaMonHocChanged();
    partial void OnDiemTBChanging(double value);
    partial void OnDiemTBChanged();
    partial void OnMaHocKyChanging(int value);
    partial void OnMaHocKyChanged();
    #endregion
		
		public HocSinh_DiemMonHocHocKy()
		{
			this._HocSinh_ChiTietDiems = new EntitySet<HocSinh_ChiTietDiem>(new Action<HocSinh_ChiTietDiem>(this.attach_HocSinh_ChiTietDiems), new Action<HocSinh_ChiTietDiem>(this.detach_HocSinh_ChiTietDiems));
			this._CauHinh_HocKy = default(EntityRef<CauHinh_HocKy>);
			this._DanhMuc_MonHoc = default(EntityRef<DanhMuc_MonHoc>);
			this._HocSinh_HocSinhLopHoc = default(EntityRef<HocSinh_HocSinhLopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDiemMonHK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDiemMonHK
		{
			get
			{
				return this._MaDiemMonHK;
			}
			set
			{
				if ((this._MaDiemMonHK != value))
				{
					this.OnMaDiemMonHKChanging(value);
					this.SendPropertyChanging();
					this._MaDiemMonHK = value;
					this.SendPropertyChanged("MaDiemMonHK");
					this.OnMaDiemMonHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinhLopHoc", DbType="Int NOT NULL")]
		public int MaHocSinhLopHoc
		{
			get
			{
				return this._MaHocSinhLopHoc;
			}
			set
			{
				if ((this._MaHocSinhLopHoc != value))
				{
					if (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinhLopHoc = value;
					this.SendPropertyChanged("MaHocSinhLopHoc");
					this.OnMaHocSinhLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="Int NOT NULL")]
		public int MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._DanhMuc_MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTB", DbType="Float NOT NULL")]
		public double DiemTB
		{
			get
			{
				return this._DiemTB;
			}
			set
			{
				if ((this._DiemTB != value))
				{
					this.OnDiemTBChanging(value);
					this.SendPropertyChanging();
					this._DiemTB = value;
					this.SendPropertyChanged("DiemTB");
					this.OnDiemTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="Int NOT NULL")]
		public int MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._CauHinh_HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DiemMonHocHocKy_HocSinh_ChiTietDiem", Storage="_HocSinh_ChiTietDiems", ThisKey="MaDiemMonHK", OtherKey="MaDiemMonHK")]
		public EntitySet<HocSinh_ChiTietDiem> HocSinh_ChiTietDiems
		{
			get
			{
				return this._HocSinh_ChiTietDiems;
			}
			set
			{
				this._HocSinh_ChiTietDiems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_HocSinh_DiemMonHocHocKy", Storage="_CauHinh_HocKy", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public CauHinh_HocKy CauHinh_HocKy
		{
			get
			{
				return this._CauHinh_HocKy.Entity;
			}
			set
			{
				CauHinh_HocKy previousValue = this._CauHinh_HocKy.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_HocKy.Entity = null;
						previousValue.HocSinh_DiemMonHocHocKies.Remove(this);
					}
					this._CauHinh_HocKy.Entity = value;
					if ((value != null))
					{
						value.HocSinh_DiemMonHocHocKies.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(int);
					}
					this.SendPropertyChanged("CauHinh_HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_MonHoc_HocSinh_DiemMonHocHocKy", Storage="_DanhMuc_MonHoc", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public DanhMuc_MonHoc DanhMuc_MonHoc
		{
			get
			{
				return this._DanhMuc_MonHoc.Entity;
			}
			set
			{
				DanhMuc_MonHoc previousValue = this._DanhMuc_MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc_MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc_MonHoc.Entity = null;
						previousValue.HocSinh_DiemMonHocHocKies.Remove(this);
					}
					this._DanhMuc_MonHoc.Entity = value;
					if ((value != null))
					{
						value.HocSinh_DiemMonHocHocKies.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(int);
					}
					this.SendPropertyChanged("DanhMuc_MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_HocSinh_DiemMonHocHocKy", Storage="_HocSinh_HocSinhLopHoc", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc", IsForeignKey=true)]
		public HocSinh_HocSinhLopHoc HocSinh_HocSinhLopHoc
		{
			get
			{
				return this._HocSinh_HocSinhLopHoc.Entity;
			}
			set
			{
				HocSinh_HocSinhLopHoc previousValue = this._HocSinh_HocSinhLopHoc.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh_HocSinhLopHoc.Entity = null;
						previousValue.HocSinh_DiemMonHocHocKies.Remove(this);
					}
					this._HocSinh_HocSinhLopHoc.Entity = value;
					if ((value != null))
					{
						value.HocSinh_DiemMonHocHocKies.Add(this);
						this._MaHocSinhLopHoc = value.MaHocSinhLopHoc;
					}
					else
					{
						this._MaHocSinhLopHoc = default(int);
					}
					this.SendPropertyChanged("HocSinh_HocSinhLopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinh_ChiTietDiems(HocSinh_ChiTietDiem entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_DiemMonHocHocKy = this;
		}
		
		private void detach_HocSinh_ChiTietDiems(HocSinh_ChiTietDiem entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_DiemMonHocHocKy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh_HoatDong")]
	public partial class HocSinh_HoatDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHoatDong;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private System.DateTime _Ngay;
		
		private int _MaHocSinhLopHoc;
		
		private System.Nullable<int> _MaThaiDoThamGia;
		
		private System.Nullable<int> _MaThongBaoLop;
		
		private int _MaHocKy;
		
		private EntityRef<CauHinh_HocKy> _CauHinh_HocKy;
		
		private EntityRef<HocSinh_HocSinhLopHoc> _HocSinh_HocSinhLopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoatDongChanging(int value);
    partial void OnMaHoatDongChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnMaHocSinhLopHocChanging(int value);
    partial void OnMaHocSinhLopHocChanged();
    partial void OnMaThaiDoThamGiaChanging(System.Nullable<int> value);
    partial void OnMaThaiDoThamGiaChanged();
    partial void OnMaThongBaoLopChanging(System.Nullable<int> value);
    partial void OnMaThongBaoLopChanged();
    partial void OnMaHocKyChanging(int value);
    partial void OnMaHocKyChanged();
    #endregion
		
		public HocSinh_HoatDong()
		{
			this._CauHinh_HocKy = default(EntityRef<CauHinh_HocKy>);
			this._HocSinh_HocSinhLopHoc = default(EntityRef<HocSinh_HocSinhLopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoatDong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHoatDong
		{
			get
			{
				return this._MaHoatDong;
			}
			set
			{
				if ((this._MaHoatDong != value))
				{
					this.OnMaHoatDongChanging(value);
					this.SendPropertyChanging();
					this._MaHoatDong = value;
					this.SendPropertyChanged("MaHoatDong");
					this.OnMaHoatDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NChar(300)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinhLopHoc", DbType="Int NOT NULL")]
		public int MaHocSinhLopHoc
		{
			get
			{
				return this._MaHocSinhLopHoc;
			}
			set
			{
				if ((this._MaHocSinhLopHoc != value))
				{
					if (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinhLopHoc = value;
					this.SendPropertyChanged("MaHocSinhLopHoc");
					this.OnMaHocSinhLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThaiDoThamGia", DbType="Int")]
		public System.Nullable<int> MaThaiDoThamGia
		{
			get
			{
				return this._MaThaiDoThamGia;
			}
			set
			{
				if ((this._MaThaiDoThamGia != value))
				{
					this.OnMaThaiDoThamGiaChanging(value);
					this.SendPropertyChanging();
					this._MaThaiDoThamGia = value;
					this.SendPropertyChanged("MaThaiDoThamGia");
					this.OnMaThaiDoThamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThongBaoLop", DbType="Int")]
		public System.Nullable<int> MaThongBaoLop
		{
			get
			{
				return this._MaThongBaoLop;
			}
			set
			{
				if ((this._MaThongBaoLop != value))
				{
					this.OnMaThongBaoLopChanging(value);
					this.SendPropertyChanging();
					this._MaThongBaoLop = value;
					this.SendPropertyChanged("MaThongBaoLop");
					this.OnMaThongBaoLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="Int NOT NULL")]
		public int MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._CauHinh_HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_HocSinh_HoatDong", Storage="_CauHinh_HocKy", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public CauHinh_HocKy CauHinh_HocKy
		{
			get
			{
				return this._CauHinh_HocKy.Entity;
			}
			set
			{
				CauHinh_HocKy previousValue = this._CauHinh_HocKy.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_HocKy.Entity = null;
						previousValue.HocSinh_HoatDongs.Remove(this);
					}
					this._CauHinh_HocKy.Entity = value;
					if ((value != null))
					{
						value.HocSinh_HoatDongs.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(int);
					}
					this.SendPropertyChanged("CauHinh_HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_HocSinh_HoatDong", Storage="_HocSinh_HocSinhLopHoc", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc", IsForeignKey=true)]
		public HocSinh_HocSinhLopHoc HocSinh_HocSinhLopHoc
		{
			get
			{
				return this._HocSinh_HocSinhLopHoc.Entity;
			}
			set
			{
				HocSinh_HocSinhLopHoc previousValue = this._HocSinh_HocSinhLopHoc.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh_HocSinhLopHoc.Entity = null;
						previousValue.HocSinh_HoatDongs.Remove(this);
					}
					this._HocSinh_HocSinhLopHoc.Entity = value;
					if ((value != null))
					{
						value.HocSinh_HoatDongs.Add(this);
						this._MaHocSinhLopHoc = value.MaHocSinhLopHoc;
					}
					else
					{
						this._MaHocSinhLopHoc = default(int);
					}
					this.SendPropertyChanged("HocSinh_HocSinhLopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh_HocSinhLopHoc")]
	public partial class HocSinh_HocSinhLopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHocSinhLopHoc;
		
		private int _MaHocSinh;
		
		private int _MaLopHoc;
		
		private EntitySet<GopY_YKien> _GopY_YKiens;
		
		private EntitySet<HocSinh_DanhHieuHocKy> _HocSinh_DanhHieuHocKies;
		
		private EntitySet<HocSinh_DiemMonHocHocKy> _HocSinh_DiemMonHocHocKies;
		
		private EntitySet<HocSinh_HoatDong> _HocSinh_HoatDongs;
		
		private EntitySet<HocSinh_Khen> _HocSinh_Khens;
		
		private EntitySet<HocSinh_NgayNghiHoc> _HocSinh_NgayNghiHocs;
		
		private EntitySet<HocSinh_Phat> _HocSinh_Phats;
		
		private EntitySet<LoiNhanKhan_LoiNhanKhan> _LoiNhanKhan_LoiNhanKhans;
		
		private EntityRef<HocSinh_ThongTinCaNhan> _HocSinh_ThongTinCaNhan;
		
		private EntityRef<LopHoc_Lop> _LopHoc_Lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhLopHocChanging(int value);
    partial void OnMaHocSinhLopHocChanged();
    partial void OnMaHocSinhChanging(int value);
    partial void OnMaHocSinhChanged();
    partial void OnMaLopHocChanging(int value);
    partial void OnMaLopHocChanged();
    #endregion
		
		public HocSinh_HocSinhLopHoc()
		{
			this._GopY_YKiens = new EntitySet<GopY_YKien>(new Action<GopY_YKien>(this.attach_GopY_YKiens), new Action<GopY_YKien>(this.detach_GopY_YKiens));
			this._HocSinh_DanhHieuHocKies = new EntitySet<HocSinh_DanhHieuHocKy>(new Action<HocSinh_DanhHieuHocKy>(this.attach_HocSinh_DanhHieuHocKies), new Action<HocSinh_DanhHieuHocKy>(this.detach_HocSinh_DanhHieuHocKies));
			this._HocSinh_DiemMonHocHocKies = new EntitySet<HocSinh_DiemMonHocHocKy>(new Action<HocSinh_DiemMonHocHocKy>(this.attach_HocSinh_DiemMonHocHocKies), new Action<HocSinh_DiemMonHocHocKy>(this.detach_HocSinh_DiemMonHocHocKies));
			this._HocSinh_HoatDongs = new EntitySet<HocSinh_HoatDong>(new Action<HocSinh_HoatDong>(this.attach_HocSinh_HoatDongs), new Action<HocSinh_HoatDong>(this.detach_HocSinh_HoatDongs));
			this._HocSinh_Khens = new EntitySet<HocSinh_Khen>(new Action<HocSinh_Khen>(this.attach_HocSinh_Khens), new Action<HocSinh_Khen>(this.detach_HocSinh_Khens));
			this._HocSinh_NgayNghiHocs = new EntitySet<HocSinh_NgayNghiHoc>(new Action<HocSinh_NgayNghiHoc>(this.attach_HocSinh_NgayNghiHocs), new Action<HocSinh_NgayNghiHoc>(this.detach_HocSinh_NgayNghiHocs));
			this._HocSinh_Phats = new EntitySet<HocSinh_Phat>(new Action<HocSinh_Phat>(this.attach_HocSinh_Phats), new Action<HocSinh_Phat>(this.detach_HocSinh_Phats));
			this._LoiNhanKhan_LoiNhanKhans = new EntitySet<LoiNhanKhan_LoiNhanKhan>(new Action<LoiNhanKhan_LoiNhanKhan>(this.attach_LoiNhanKhan_LoiNhanKhans), new Action<LoiNhanKhan_LoiNhanKhan>(this.detach_LoiNhanKhan_LoiNhanKhans));
			this._HocSinh_ThongTinCaNhan = default(EntityRef<HocSinh_ThongTinCaNhan>);
			this._LopHoc_Lop = default(EntityRef<LopHoc_Lop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinhLopHoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHocSinhLopHoc
		{
			get
			{
				return this._MaHocSinhLopHoc;
			}
			set
			{
				if ((this._MaHocSinhLopHoc != value))
				{
					this.OnMaHocSinhLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinhLopHoc = value;
					this.SendPropertyChanged("MaHocSinhLopHoc");
					this.OnMaHocSinhLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="Int NOT NULL")]
		public int MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HocSinh_ThongTinCaNhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="Int NOT NULL")]
		public int MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					if (this._LopHoc_Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_GopY_YKien", Storage="_GopY_YKiens", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc")]
		public EntitySet<GopY_YKien> GopY_YKiens
		{
			get
			{
				return this._GopY_YKiens;
			}
			set
			{
				this._GopY_YKiens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_HocSinh_DanhHieuHocKy", Storage="_HocSinh_DanhHieuHocKies", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc")]
		public EntitySet<HocSinh_DanhHieuHocKy> HocSinh_DanhHieuHocKies
		{
			get
			{
				return this._HocSinh_DanhHieuHocKies;
			}
			set
			{
				this._HocSinh_DanhHieuHocKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_HocSinh_DiemMonHocHocKy", Storage="_HocSinh_DiemMonHocHocKies", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc")]
		public EntitySet<HocSinh_DiemMonHocHocKy> HocSinh_DiemMonHocHocKies
		{
			get
			{
				return this._HocSinh_DiemMonHocHocKies;
			}
			set
			{
				this._HocSinh_DiemMonHocHocKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_HocSinh_HoatDong", Storage="_HocSinh_HoatDongs", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc")]
		public EntitySet<HocSinh_HoatDong> HocSinh_HoatDongs
		{
			get
			{
				return this._HocSinh_HoatDongs;
			}
			set
			{
				this._HocSinh_HoatDongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_HocSinh_Khen", Storage="_HocSinh_Khens", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc")]
		public EntitySet<HocSinh_Khen> HocSinh_Khens
		{
			get
			{
				return this._HocSinh_Khens;
			}
			set
			{
				this._HocSinh_Khens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_HocSinh_NgayNghiHoc", Storage="_HocSinh_NgayNghiHocs", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc")]
		public EntitySet<HocSinh_NgayNghiHoc> HocSinh_NgayNghiHocs
		{
			get
			{
				return this._HocSinh_NgayNghiHocs;
			}
			set
			{
				this._HocSinh_NgayNghiHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_HocSinh_Phat", Storage="_HocSinh_Phats", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc")]
		public EntitySet<HocSinh_Phat> HocSinh_Phats
		{
			get
			{
				return this._HocSinh_Phats;
			}
			set
			{
				this._HocSinh_Phats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_LoiNhanKhan_LoiNhanKhan", Storage="_LoiNhanKhan_LoiNhanKhans", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc")]
		public EntitySet<LoiNhanKhan_LoiNhanKhan> LoiNhanKhan_LoiNhanKhans
		{
			get
			{
				return this._LoiNhanKhan_LoiNhanKhans;
			}
			set
			{
				this._LoiNhanKhan_LoiNhanKhans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_ThongTinCaNhan_HocSinh_HocSinhLopHoc", Storage="_HocSinh_ThongTinCaNhan", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HocSinh_ThongTinCaNhan HocSinh_ThongTinCaNhan
		{
			get
			{
				return this._HocSinh_ThongTinCaNhan.Entity;
			}
			set
			{
				HocSinh_ThongTinCaNhan previousValue = this._HocSinh_ThongTinCaNhan.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh_ThongTinCaNhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh_ThongTinCaNhan.Entity = null;
						previousValue.HocSinh_HocSinhLopHocs.Remove(this);
					}
					this._HocSinh_ThongTinCaNhan.Entity = value;
					if ((value != null))
					{
						value.HocSinh_HocSinhLopHocs.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(int);
					}
					this.SendPropertyChanged("HocSinh_ThongTinCaNhan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_Lop_HocSinh_HocSinhLopHoc", Storage="_LopHoc_Lop", ThisKey="MaLopHoc", OtherKey="MaLopHoc", IsForeignKey=true)]
		public LopHoc_Lop LopHoc_Lop
		{
			get
			{
				return this._LopHoc_Lop.Entity;
			}
			set
			{
				LopHoc_Lop previousValue = this._LopHoc_Lop.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc_Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc_Lop.Entity = null;
						previousValue.HocSinh_HocSinhLopHocs.Remove(this);
					}
					this._LopHoc_Lop.Entity = value;
					if ((value != null))
					{
						value.HocSinh_HocSinhLopHocs.Add(this);
						this._MaLopHoc = value.MaLopHoc;
					}
					else
					{
						this._MaLopHoc = default(int);
					}
					this.SendPropertyChanged("LopHoc_Lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GopY_YKiens(GopY_YKien entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = this;
		}
		
		private void detach_GopY_YKiens(GopY_YKien entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = null;
		}
		
		private void attach_HocSinh_DanhHieuHocKies(HocSinh_DanhHieuHocKy entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = this;
		}
		
		private void detach_HocSinh_DanhHieuHocKies(HocSinh_DanhHieuHocKy entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = null;
		}
		
		private void attach_HocSinh_DiemMonHocHocKies(HocSinh_DiemMonHocHocKy entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = this;
		}
		
		private void detach_HocSinh_DiemMonHocHocKies(HocSinh_DiemMonHocHocKy entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = null;
		}
		
		private void attach_HocSinh_HoatDongs(HocSinh_HoatDong entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = this;
		}
		
		private void detach_HocSinh_HoatDongs(HocSinh_HoatDong entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = null;
		}
		
		private void attach_HocSinh_Khens(HocSinh_Khen entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = this;
		}
		
		private void detach_HocSinh_Khens(HocSinh_Khen entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = null;
		}
		
		private void attach_HocSinh_NgayNghiHocs(HocSinh_NgayNghiHoc entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = this;
		}
		
		private void detach_HocSinh_NgayNghiHocs(HocSinh_NgayNghiHoc entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = null;
		}
		
		private void attach_HocSinh_Phats(HocSinh_Phat entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = this;
		}
		
		private void detach_HocSinh_Phats(HocSinh_Phat entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = null;
		}
		
		private void attach_LoiNhanKhan_LoiNhanKhans(LoiNhanKhan_LoiNhanKhan entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = this;
		}
		
		private void detach_LoiNhanKhan_LoiNhanKhans(LoiNhanKhan_LoiNhanKhan entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_HocSinhLopHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh_Khen")]
	public partial class HocSinh_Khen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhen;
		
		private int _MaHocSinhLopHoc;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private string _NhanXetGVCN;
		
		private int _MaHocKy;
		
		private EntityRef<CauHinh_HocKy> _CauHinh_HocKy;
		
		private EntityRef<HocSinh_HocSinhLopHoc> _HocSinh_HocSinhLopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhenChanging(int value);
    partial void OnMaKhenChanged();
    partial void OnMaHocSinhLopHocChanging(int value);
    partial void OnMaHocSinhLopHocChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    partial void OnNhanXetGVCNChanging(string value);
    partial void OnNhanXetGVCNChanged();
    partial void OnMaHocKyChanging(int value);
    partial void OnMaHocKyChanged();
    #endregion
		
		public HocSinh_Khen()
		{
			this._CauHinh_HocKy = default(EntityRef<CauHinh_HocKy>);
			this._HocSinh_HocSinhLopHoc = default(EntityRef<HocSinh_HocSinhLopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKhen
		{
			get
			{
				return this._MaKhen;
			}
			set
			{
				if ((this._MaKhen != value))
				{
					this.OnMaKhenChanging(value);
					this.SendPropertyChanging();
					this._MaKhen = value;
					this.SendPropertyChanged("MaKhen");
					this.OnMaKhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinhLopHoc", DbType="Int NOT NULL")]
		public int MaHocSinhLopHoc
		{
			get
			{
				return this._MaHocSinhLopHoc;
			}
			set
			{
				if ((this._MaHocSinhLopHoc != value))
				{
					if (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinhLopHoc = value;
					this.SendPropertyChanged("MaHocSinhLopHoc");
					this.OnMaHocSinhLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(300)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanXetGVCN", DbType="NVarChar(300)")]
		public string NhanXetGVCN
		{
			get
			{
				return this._NhanXetGVCN;
			}
			set
			{
				if ((this._NhanXetGVCN != value))
				{
					this.OnNhanXetGVCNChanging(value);
					this.SendPropertyChanging();
					this._NhanXetGVCN = value;
					this.SendPropertyChanged("NhanXetGVCN");
					this.OnNhanXetGVCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="Int NOT NULL")]
		public int MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._CauHinh_HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_HocSinh_Khen", Storage="_CauHinh_HocKy", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public CauHinh_HocKy CauHinh_HocKy
		{
			get
			{
				return this._CauHinh_HocKy.Entity;
			}
			set
			{
				CauHinh_HocKy previousValue = this._CauHinh_HocKy.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_HocKy.Entity = null;
						previousValue.HocSinh_Khens.Remove(this);
					}
					this._CauHinh_HocKy.Entity = value;
					if ((value != null))
					{
						value.HocSinh_Khens.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(int);
					}
					this.SendPropertyChanged("CauHinh_HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_HocSinh_Khen", Storage="_HocSinh_HocSinhLopHoc", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc", IsForeignKey=true)]
		public HocSinh_HocSinhLopHoc HocSinh_HocSinhLopHoc
		{
			get
			{
				return this._HocSinh_HocSinhLopHoc.Entity;
			}
			set
			{
				HocSinh_HocSinhLopHoc previousValue = this._HocSinh_HocSinhLopHoc.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh_HocSinhLopHoc.Entity = null;
						previousValue.HocSinh_Khens.Remove(this);
					}
					this._HocSinh_HocSinhLopHoc.Entity = value;
					if ((value != null))
					{
						value.HocSinh_Khens.Add(this);
						this._MaHocSinhLopHoc = value.MaHocSinhLopHoc;
					}
					else
					{
						this._MaHocSinhLopHoc = default(int);
					}
					this.SendPropertyChanged("HocSinh_HocSinhLopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh_NgayNghiHoc")]
	public partial class HocSinh_NgayNghiHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNgayNghiHoc;
		
		private int _MaHocSinhLopHoc;
		
		private System.DateTime _Ngay;
		
		private int _MaBuoi;
		
		private bool _XinPhep;
		
		private string _LyDo;
		
		private bool _XacNhan;
		
		private int _MaHocKy;
		
		private EntityRef<CauHinh_HocKy> _CauHinh_HocKy;
		
		private EntityRef<HocSinh_HocSinhLopHoc> _HocSinh_HocSinhLopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNgayNghiHocChanging(int value);
    partial void OnMaNgayNghiHocChanged();
    partial void OnMaHocSinhLopHocChanging(int value);
    partial void OnMaHocSinhLopHocChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnMaBuoiChanging(int value);
    partial void OnMaBuoiChanged();
    partial void OnXinPhepChanging(bool value);
    partial void OnXinPhepChanged();
    partial void OnLyDoChanging(string value);
    partial void OnLyDoChanged();
    partial void OnXacNhanChanging(bool value);
    partial void OnXacNhanChanged();
    partial void OnMaHocKyChanging(int value);
    partial void OnMaHocKyChanged();
    #endregion
		
		public HocSinh_NgayNghiHoc()
		{
			this._CauHinh_HocKy = default(EntityRef<CauHinh_HocKy>);
			this._HocSinh_HocSinhLopHoc = default(EntityRef<HocSinh_HocSinhLopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNgayNghiHoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNgayNghiHoc
		{
			get
			{
				return this._MaNgayNghiHoc;
			}
			set
			{
				if ((this._MaNgayNghiHoc != value))
				{
					this.OnMaNgayNghiHocChanging(value);
					this.SendPropertyChanging();
					this._MaNgayNghiHoc = value;
					this.SendPropertyChanged("MaNgayNghiHoc");
					this.OnMaNgayNghiHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinhLopHoc", DbType="Int NOT NULL")]
		public int MaHocSinhLopHoc
		{
			get
			{
				return this._MaHocSinhLopHoc;
			}
			set
			{
				if ((this._MaHocSinhLopHoc != value))
				{
					if (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinhLopHoc = value;
					this.SendPropertyChanged("MaHocSinhLopHoc");
					this.OnMaHocSinhLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBuoi", DbType="Int NOT NULL")]
		public int MaBuoi
		{
			get
			{
				return this._MaBuoi;
			}
			set
			{
				if ((this._MaBuoi != value))
				{
					this.OnMaBuoiChanging(value);
					this.SendPropertyChanging();
					this._MaBuoi = value;
					this.SendPropertyChanged("MaBuoi");
					this.OnMaBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XinPhep", DbType="Bit NOT NULL")]
		public bool XinPhep
		{
			get
			{
				return this._XinPhep;
			}
			set
			{
				if ((this._XinPhep != value))
				{
					this.OnXinPhepChanging(value);
					this.SendPropertyChanging();
					this._XinPhep = value;
					this.SendPropertyChanged("XinPhep");
					this.OnXinPhepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LyDo", DbType="NVarChar(300)")]
		public string LyDo
		{
			get
			{
				return this._LyDo;
			}
			set
			{
				if ((this._LyDo != value))
				{
					this.OnLyDoChanging(value);
					this.SendPropertyChanging();
					this._LyDo = value;
					this.SendPropertyChanged("LyDo");
					this.OnLyDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XacNhan", DbType="Bit NOT NULL")]
		public bool XacNhan
		{
			get
			{
				return this._XacNhan;
			}
			set
			{
				if ((this._XacNhan != value))
				{
					this.OnXacNhanChanging(value);
					this.SendPropertyChanging();
					this._XacNhan = value;
					this.SendPropertyChanged("XacNhan");
					this.OnXacNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="Int NOT NULL")]
		public int MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._CauHinh_HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_HocSinh_NgayNghiHoc", Storage="_CauHinh_HocKy", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public CauHinh_HocKy CauHinh_HocKy
		{
			get
			{
				return this._CauHinh_HocKy.Entity;
			}
			set
			{
				CauHinh_HocKy previousValue = this._CauHinh_HocKy.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_HocKy.Entity = null;
						previousValue.HocSinh_NgayNghiHocs.Remove(this);
					}
					this._CauHinh_HocKy.Entity = value;
					if ((value != null))
					{
						value.HocSinh_NgayNghiHocs.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(int);
					}
					this.SendPropertyChanged("CauHinh_HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_HocSinh_NgayNghiHoc", Storage="_HocSinh_HocSinhLopHoc", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc", IsForeignKey=true)]
		public HocSinh_HocSinhLopHoc HocSinh_HocSinhLopHoc
		{
			get
			{
				return this._HocSinh_HocSinhLopHoc.Entity;
			}
			set
			{
				HocSinh_HocSinhLopHoc previousValue = this._HocSinh_HocSinhLopHoc.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh_HocSinhLopHoc.Entity = null;
						previousValue.HocSinh_NgayNghiHocs.Remove(this);
					}
					this._HocSinh_HocSinhLopHoc.Entity = value;
					if ((value != null))
					{
						value.HocSinh_NgayNghiHocs.Add(this);
						this._MaHocSinhLopHoc = value.MaHocSinhLopHoc;
					}
					else
					{
						this._MaHocSinhLopHoc = default(int);
					}
					this.SendPropertyChanged("HocSinh_HocSinhLopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh_Phat")]
	public partial class HocSinh_Phat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhat;
		
		private int _MaHocSinhLopHoc;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private string _NhanXetGVCN;
		
		private int _MaHocKy;
		
		private EntityRef<CauHinh_HocKy> _CauHinh_HocKy;
		
		private EntityRef<HocSinh_HocSinhLopHoc> _HocSinh_HocSinhLopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhatChanging(int value);
    partial void OnMaPhatChanged();
    partial void OnMaHocSinhLopHocChanging(int value);
    partial void OnMaHocSinhLopHocChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    partial void OnNhanXetGVCNChanging(string value);
    partial void OnNhanXetGVCNChanged();
    partial void OnMaHocKyChanging(int value);
    partial void OnMaHocKyChanged();
    #endregion
		
		public HocSinh_Phat()
		{
			this._CauHinh_HocKy = default(EntityRef<CauHinh_HocKy>);
			this._HocSinh_HocSinhLopHoc = default(EntityRef<HocSinh_HocSinhLopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhat
		{
			get
			{
				return this._MaPhat;
			}
			set
			{
				if ((this._MaPhat != value))
				{
					this.OnMaPhatChanging(value);
					this.SendPropertyChanging();
					this._MaPhat = value;
					this.SendPropertyChanged("MaPhat");
					this.OnMaPhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinhLopHoc", DbType="Int NOT NULL")]
		public int MaHocSinhLopHoc
		{
			get
			{
				return this._MaHocSinhLopHoc;
			}
			set
			{
				if ((this._MaHocSinhLopHoc != value))
				{
					if (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinhLopHoc = value;
					this.SendPropertyChanged("MaHocSinhLopHoc");
					this.OnMaHocSinhLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(300)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanXetGVCN", DbType="NVarChar(300)")]
		public string NhanXetGVCN
		{
			get
			{
				return this._NhanXetGVCN;
			}
			set
			{
				if ((this._NhanXetGVCN != value))
				{
					this.OnNhanXetGVCNChanging(value);
					this.SendPropertyChanging();
					this._NhanXetGVCN = value;
					this.SendPropertyChanged("NhanXetGVCN");
					this.OnNhanXetGVCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="Int NOT NULL")]
		public int MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._CauHinh_HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_HocSinh_Phat", Storage="_CauHinh_HocKy", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public CauHinh_HocKy CauHinh_HocKy
		{
			get
			{
				return this._CauHinh_HocKy.Entity;
			}
			set
			{
				CauHinh_HocKy previousValue = this._CauHinh_HocKy.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_HocKy.Entity = null;
						previousValue.HocSinh_Phats.Remove(this);
					}
					this._CauHinh_HocKy.Entity = value;
					if ((value != null))
					{
						value.HocSinh_Phats.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(int);
					}
					this.SendPropertyChanged("CauHinh_HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_HocSinh_Phat", Storage="_HocSinh_HocSinhLopHoc", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc", IsForeignKey=true)]
		public HocSinh_HocSinhLopHoc HocSinh_HocSinhLopHoc
		{
			get
			{
				return this._HocSinh_HocSinhLopHoc.Entity;
			}
			set
			{
				HocSinh_HocSinhLopHoc previousValue = this._HocSinh_HocSinhLopHoc.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh_HocSinhLopHoc.Entity = null;
						previousValue.HocSinh_Phats.Remove(this);
					}
					this._HocSinh_HocSinhLopHoc.Entity = value;
					if ((value != null))
					{
						value.HocSinh_Phats.Add(this);
						this._MaHocSinhLopHoc = value.MaHocSinhLopHoc;
					}
					else
					{
						this._MaHocSinhLopHoc = default(int);
					}
					this.SendPropertyChanged("HocSinh_HocSinhLopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh_ThongTinCaNhan")]
	public partial class HocSinh_ThongTinCaNhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHocSinh;
		
		private string _MaHocSinhHienThi;
		
		private string _HoTen;
		
		private System.DateTime _NgaySinh;
		
		private bool _GioiTinh;
		
		private string _NoiSinh;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private System.Data.Linq.Binary _HinhAnh;
		
		private string _HoTenBo;
		
		private System.Nullable<System.DateTime> _NgaySinhBo;
		
		private string _NgheNghiepBo;
		
		private string _HoTenMe;
		
		private System.Nullable<System.DateTime> _NgaySinhMe;
		
		private string _NgheNghiepMe;
		
		private string _HoTenNguoiDoDau;
		
		private System.Nullable<System.DateTime> _NgaySinhNguoiDoDau;
		
		private string _NgheNghiepNguoiDoDau;
		
		private EntitySet<HocSinh_HocSinhLopHoc> _HocSinh_HocSinhLopHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(int value);
    partial void OnMaHocSinhChanged();
    partial void OnMaHocSinhHienThiChanging(string value);
    partial void OnMaHocSinhHienThiChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(bool value);
    partial void OnGioiTinhChanged();
    partial void OnNoiSinhChanging(string value);
    partial void OnNoiSinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnHinhAnhChanging(System.Data.Linq.Binary value);
    partial void OnHinhAnhChanged();
    partial void OnHoTenBoChanging(string value);
    partial void OnHoTenBoChanged();
    partial void OnNgaySinhBoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhBoChanged();
    partial void OnNgheNghiepBoChanging(string value);
    partial void OnNgheNghiepBoChanged();
    partial void OnHoTenMeChanging(string value);
    partial void OnHoTenMeChanged();
    partial void OnNgaySinhMeChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhMeChanged();
    partial void OnNgheNghiepMeChanging(string value);
    partial void OnNgheNghiepMeChanged();
    partial void OnHoTenNguoiDoDauChanging(string value);
    partial void OnHoTenNguoiDoDauChanged();
    partial void OnNgaySinhNguoiDoDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhNguoiDoDauChanged();
    partial void OnNgheNghiepNguoiDoDauChanging(string value);
    partial void OnNgheNghiepNguoiDoDauChanged();
    #endregion
		
		public HocSinh_ThongTinCaNhan()
		{
			this._HocSinh_HocSinhLopHocs = new EntitySet<HocSinh_HocSinhLopHoc>(new Action<HocSinh_HocSinhLopHoc>(this.attach_HocSinh_HocSinhLopHocs), new Action<HocSinh_HocSinhLopHoc>(this.detach_HocSinh_HocSinhLopHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinhHienThi", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MaHocSinhHienThi
		{
			get
			{
				return this._MaHocSinhHienThi;
			}
			set
			{
				if ((this._MaHocSinhHienThi != value))
				{
					this.OnMaHocSinhHienThiChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinhHienThi = value;
					this.SendPropertyChanged("MaHocSinhHienThi");
					this.OnMaHocSinhHienThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit NOT NULL")]
		public bool GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiSinh", DbType="NVarChar(200)")]
		public string NoiSinh
		{
			get
			{
				return this._NoiSinh;
			}
			set
			{
				if ((this._NoiSinh != value))
				{
					this.OnNoiSinhChanging(value);
					this.SendPropertyChanging();
					this._NoiSinh = value;
					this.SendPropertyChanged("NoiSinh");
					this.OnNoiSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenBo", DbType="NVarChar(100)")]
		public string HoTenBo
		{
			get
			{
				return this._HoTenBo;
			}
			set
			{
				if ((this._HoTenBo != value))
				{
					this.OnHoTenBoChanging(value);
					this.SendPropertyChanging();
					this._HoTenBo = value;
					this.SendPropertyChanged("HoTenBo");
					this.OnHoTenBoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhBo", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinhBo
		{
			get
			{
				return this._NgaySinhBo;
			}
			set
			{
				if ((this._NgaySinhBo != value))
				{
					this.OnNgaySinhBoChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhBo = value;
					this.SendPropertyChanged("NgaySinhBo");
					this.OnNgaySinhBoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgheNghiepBo", DbType="NVarChar(100)")]
		public string NgheNghiepBo
		{
			get
			{
				return this._NgheNghiepBo;
			}
			set
			{
				if ((this._NgheNghiepBo != value))
				{
					this.OnNgheNghiepBoChanging(value);
					this.SendPropertyChanging();
					this._NgheNghiepBo = value;
					this.SendPropertyChanged("NgheNghiepBo");
					this.OnNgheNghiepBoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenMe", DbType="NVarChar(100)")]
		public string HoTenMe
		{
			get
			{
				return this._HoTenMe;
			}
			set
			{
				if ((this._HoTenMe != value))
				{
					this.OnHoTenMeChanging(value);
					this.SendPropertyChanging();
					this._HoTenMe = value;
					this.SendPropertyChanged("HoTenMe");
					this.OnHoTenMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhMe", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinhMe
		{
			get
			{
				return this._NgaySinhMe;
			}
			set
			{
				if ((this._NgaySinhMe != value))
				{
					this.OnNgaySinhMeChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhMe = value;
					this.SendPropertyChanged("NgaySinhMe");
					this.OnNgaySinhMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgheNghiepMe", DbType="NVarChar(100)")]
		public string NgheNghiepMe
		{
			get
			{
				return this._NgheNghiepMe;
			}
			set
			{
				if ((this._NgheNghiepMe != value))
				{
					this.OnNgheNghiepMeChanging(value);
					this.SendPropertyChanging();
					this._NgheNghiepMe = value;
					this.SendPropertyChanged("NgheNghiepMe");
					this.OnNgheNghiepMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNguoiDoDau", DbType="NVarChar(100)")]
		public string HoTenNguoiDoDau
		{
			get
			{
				return this._HoTenNguoiDoDau;
			}
			set
			{
				if ((this._HoTenNguoiDoDau != value))
				{
					this.OnHoTenNguoiDoDauChanging(value);
					this.SendPropertyChanging();
					this._HoTenNguoiDoDau = value;
					this.SendPropertyChanged("HoTenNguoiDoDau");
					this.OnHoTenNguoiDoDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhNguoiDoDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinhNguoiDoDau
		{
			get
			{
				return this._NgaySinhNguoiDoDau;
			}
			set
			{
				if ((this._NgaySinhNguoiDoDau != value))
				{
					this.OnNgaySinhNguoiDoDauChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhNguoiDoDau = value;
					this.SendPropertyChanged("NgaySinhNguoiDoDau");
					this.OnNgaySinhNguoiDoDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgheNghiepNguoiDoDau", DbType="NVarChar(100)")]
		public string NgheNghiepNguoiDoDau
		{
			get
			{
				return this._NgheNghiepNguoiDoDau;
			}
			set
			{
				if ((this._NgheNghiepNguoiDoDau != value))
				{
					this.OnNgheNghiepNguoiDoDauChanging(value);
					this.SendPropertyChanging();
					this._NgheNghiepNguoiDoDau = value;
					this.SendPropertyChanged("NgheNghiepNguoiDoDau");
					this.OnNgheNghiepNguoiDoDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_ThongTinCaNhan_HocSinh_HocSinhLopHoc", Storage="_HocSinh_HocSinhLopHocs", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<HocSinh_HocSinhLopHoc> HocSinh_HocSinhLopHocs
		{
			get
			{
				return this._HocSinh_HocSinhLopHocs;
			}
			set
			{
				this._HocSinh_HocSinhLopHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinh_HocSinhLopHocs(HocSinh_HocSinhLopHoc entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_ThongTinCaNhan = this;
		}
		
		private void detach_HocSinh_HocSinhLopHocs(HocSinh_HocSinhLopHoc entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh_ThongTinCaNhan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoiNhanKhan_LoiNhanKhan")]
	public partial class LoiNhanKhan_LoiNhanKhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoiNhanKhan;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private System.DateTime _Ngay;
		
		private int _MaHocSinhLopHoc;
		
		private bool _XacNhan;
		
		private System.Nullable<int> _MaThongBaoLop;
		
		private EntityRef<HocSinh_HocSinhLopHoc> _HocSinh_HocSinhLopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoiNhanKhanChanging(int value);
    partial void OnMaLoiNhanKhanChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnMaHocSinhLopHocChanging(int value);
    partial void OnMaHocSinhLopHocChanged();
    partial void OnXacNhanChanging(bool value);
    partial void OnXacNhanChanged();
    partial void OnMaThongBaoLopChanging(System.Nullable<int> value);
    partial void OnMaThongBaoLopChanged();
    #endregion
		
		public LoiNhanKhan_LoiNhanKhan()
		{
			this._HocSinh_HocSinhLopHoc = default(EntityRef<HocSinh_HocSinhLopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoiNhanKhan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoiNhanKhan
		{
			get
			{
				return this._MaLoiNhanKhan;
			}
			set
			{
				if ((this._MaLoiNhanKhan != value))
				{
					this.OnMaLoiNhanKhanChanging(value);
					this.SendPropertyChanging();
					this._MaLoiNhanKhan = value;
					this.SendPropertyChanged("MaLoiNhanKhan");
					this.OnMaLoiNhanKhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(300)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinhLopHoc", DbType="Int NOT NULL")]
		public int MaHocSinhLopHoc
		{
			get
			{
				return this._MaHocSinhLopHoc;
			}
			set
			{
				if ((this._MaHocSinhLopHoc != value))
				{
					if (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinhLopHoc = value;
					this.SendPropertyChanged("MaHocSinhLopHoc");
					this.OnMaHocSinhLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XacNhan", DbType="Bit NOT NULL")]
		public bool XacNhan
		{
			get
			{
				return this._XacNhan;
			}
			set
			{
				if ((this._XacNhan != value))
				{
					this.OnXacNhanChanging(value);
					this.SendPropertyChanging();
					this._XacNhan = value;
					this.SendPropertyChanged("XacNhan");
					this.OnXacNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThongBaoLop", DbType="Int")]
		public System.Nullable<int> MaThongBaoLop
		{
			get
			{
				return this._MaThongBaoLop;
			}
			set
			{
				if ((this._MaThongBaoLop != value))
				{
					this.OnMaThongBaoLopChanging(value);
					this.SendPropertyChanging();
					this._MaThongBaoLop = value;
					this.SendPropertyChanged("MaThongBaoLop");
					this.OnMaThongBaoLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhLopHoc_LoiNhanKhan_LoiNhanKhan", Storage="_HocSinh_HocSinhLopHoc", ThisKey="MaHocSinhLopHoc", OtherKey="MaHocSinhLopHoc", IsForeignKey=true)]
		public HocSinh_HocSinhLopHoc HocSinh_HocSinhLopHoc
		{
			get
			{
				return this._HocSinh_HocSinhLopHoc.Entity;
			}
			set
			{
				HocSinh_HocSinhLopHoc previousValue = this._HocSinh_HocSinhLopHoc.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh_HocSinhLopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh_HocSinhLopHoc.Entity = null;
						previousValue.LoiNhanKhan_LoiNhanKhans.Remove(this);
					}
					this._HocSinh_HocSinhLopHoc.Entity = value;
					if ((value != null))
					{
						value.LoiNhanKhan_LoiNhanKhans.Add(this);
						this._MaHocSinhLopHoc = value.MaHocSinhLopHoc;
					}
					else
					{
						this._MaHocSinhLopHoc = default(int);
					}
					this.SendPropertyChanged("HocSinh_HocSinhLopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc_GiaoVien")]
	public partial class LopHoc_GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGiaoVien;
		
		private string _MaHienThiGiaoVien;
		
		private string _HoTen;
		
		private System.DateTime _NgaySinh;
		
		private bool _GioiTinh;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private System.Data.Linq.Binary _HinhAnh;
		
		private EntitySet<LopHoc_GVCN> _LopHoc_GVCNs;
		
		private EntitySet<LopHoc_MonHocTKB> _LopHoc_MonHocTKBs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoVienChanging(int value);
    partial void OnMaGiaoVienChanged();
    partial void OnMaHienThiGiaoVienChanging(string value);
    partial void OnMaHienThiGiaoVienChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(bool value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnHinhAnhChanging(System.Data.Linq.Binary value);
    partial void OnHinhAnhChanged();
    #endregion
		
		public LopHoc_GiaoVien()
		{
			this._LopHoc_GVCNs = new EntitySet<LopHoc_GVCN>(new Action<LopHoc_GVCN>(this.attach_LopHoc_GVCNs), new Action<LopHoc_GVCN>(this.detach_LopHoc_GVCNs));
			this._LopHoc_MonHocTKBs = new EntitySet<LopHoc_MonHocTKB>(new Action<LopHoc_MonHocTKB>(this.attach_LopHoc_MonHocTKBs), new Action<LopHoc_MonHocTKB>(this.detach_LopHoc_MonHocTKBs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHienThiGiaoVien", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MaHienThiGiaoVien
		{
			get
			{
				return this._MaHienThiGiaoVien;
			}
			set
			{
				if ((this._MaHienThiGiaoVien != value))
				{
					this.OnMaHienThiGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaHienThiGiaoVien = value;
					this.SendPropertyChanged("MaHienThiGiaoVien");
					this.OnMaHienThiGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit NOT NULL")]
		public bool GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_GiaoVien_LopHoc_GVCN", Storage="_LopHoc_GVCNs", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<LopHoc_GVCN> LopHoc_GVCNs
		{
			get
			{
				return this._LopHoc_GVCNs;
			}
			set
			{
				this._LopHoc_GVCNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_GiaoVien_LopHoc_MonHocTKB", Storage="_LopHoc_MonHocTKBs", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<LopHoc_MonHocTKB> LopHoc_MonHocTKBs
		{
			get
			{
				return this._LopHoc_MonHocTKBs;
			}
			set
			{
				this._LopHoc_MonHocTKBs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHoc_GVCNs(LopHoc_GVCN entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_GiaoVien = this;
		}
		
		private void detach_LopHoc_GVCNs(LopHoc_GVCN entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_GiaoVien = null;
		}
		
		private void attach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_GiaoVien = this;
		}
		
		private void detach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_GiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc_GVCN")]
	public partial class LopHoc_GVCN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGVCN;
		
		private int _MaLopHoc;
		
		private int _MaGiaoVien;
		
		private EntitySet<UserManagement_GVCNUser> _UserManagement_GVCNUsers;
		
		private EntityRef<LopHoc_GiaoVien> _LopHoc_GiaoVien;
		
		private EntityRef<LopHoc_Lop> _LopHoc_Lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVCNChanging(int value);
    partial void OnMaGVCNChanged();
    partial void OnMaLopHocChanging(int value);
    partial void OnMaLopHocChanged();
    partial void OnMaGiaoVienChanging(int value);
    partial void OnMaGiaoVienChanged();
    #endregion
		
		public LopHoc_GVCN()
		{
			this._UserManagement_GVCNUsers = new EntitySet<UserManagement_GVCNUser>(new Action<UserManagement_GVCNUser>(this.attach_UserManagement_GVCNUsers), new Action<UserManagement_GVCNUser>(this.detach_UserManagement_GVCNUsers));
			this._LopHoc_GiaoVien = default(EntityRef<LopHoc_GiaoVien>);
			this._LopHoc_Lop = default(EntityRef<LopHoc_Lop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGVCN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGVCN
		{
			get
			{
				return this._MaGVCN;
			}
			set
			{
				if ((this._MaGVCN != value))
				{
					this.OnMaGVCNChanging(value);
					this.SendPropertyChanging();
					this._MaGVCN = value;
					this.SendPropertyChanged("MaGVCN");
					this.OnMaGVCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="Int NOT NULL")]
		public int MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					if (this._LopHoc_Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="Int NOT NULL")]
		public int MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._LopHoc_GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_GVCN_UserManagement_GVCNUser", Storage="_UserManagement_GVCNUsers", ThisKey="MaGVCN", OtherKey="MaGVCN")]
		public EntitySet<UserManagement_GVCNUser> UserManagement_GVCNUsers
		{
			get
			{
				return this._UserManagement_GVCNUsers;
			}
			set
			{
				this._UserManagement_GVCNUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_GiaoVien_LopHoc_GVCN", Storage="_LopHoc_GiaoVien", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public LopHoc_GiaoVien LopHoc_GiaoVien
		{
			get
			{
				return this._LopHoc_GiaoVien.Entity;
			}
			set
			{
				LopHoc_GiaoVien previousValue = this._LopHoc_GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc_GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc_GiaoVien.Entity = null;
						previousValue.LopHoc_GVCNs.Remove(this);
					}
					this._LopHoc_GiaoVien.Entity = value;
					if ((value != null))
					{
						value.LopHoc_GVCNs.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(int);
					}
					this.SendPropertyChanged("LopHoc_GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_Lop_LopHoc_GVCN", Storage="_LopHoc_Lop", ThisKey="MaLopHoc", OtherKey="MaLopHoc", IsForeignKey=true)]
		public LopHoc_Lop LopHoc_Lop
		{
			get
			{
				return this._LopHoc_Lop.Entity;
			}
			set
			{
				LopHoc_Lop previousValue = this._LopHoc_Lop.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc_Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc_Lop.Entity = null;
						previousValue.LopHoc_GVCNs.Remove(this);
					}
					this._LopHoc_Lop.Entity = value;
					if ((value != null))
					{
						value.LopHoc_GVCNs.Add(this);
						this._MaLopHoc = value.MaLopHoc;
					}
					else
					{
						this._MaLopHoc = default(int);
					}
					this.SendPropertyChanged("LopHoc_Lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserManagement_GVCNUsers(UserManagement_GVCNUser entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_GVCN = this;
		}
		
		private void detach_UserManagement_GVCNUsers(UserManagement_GVCNUser entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_GVCN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc_Lop")]
	public partial class LopHoc_Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLopHoc;
		
		private string _TenLopHoc;
		
		private int _MaNganhHoc;
		
		private int _MaKhoiLop;
		
		private int _SiSo;
		
		private int _MaNamHoc;
		
		private EntitySet<HocSinh_HocSinhLopHoc> _HocSinh_HocSinhLopHocs;
		
		private EntitySet<LopHoc_GVCN> _LopHoc_GVCNs;
		
		private EntitySet<LopHoc_MonHocTKB> _LopHoc_MonHocTKBs;
		
		private EntitySet<LopHoc_ThongBao> _LopHoc_ThongBaos;
		
		private EntityRef<CauHinh_NamHoc> _CauHinh_NamHoc;
		
		private EntityRef<DanhMuc_KhoiLop> _DanhMuc_KhoiLop;
		
		private EntityRef<DanhMuc_NganhHoc> _DanhMuc_NganhHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopHocChanging(int value);
    partial void OnMaLopHocChanged();
    partial void OnTenLopHocChanging(string value);
    partial void OnTenLopHocChanged();
    partial void OnMaNganhHocChanging(int value);
    partial void OnMaNganhHocChanged();
    partial void OnMaKhoiLopChanging(int value);
    partial void OnMaKhoiLopChanged();
    partial void OnSiSoChanging(int value);
    partial void OnSiSoChanged();
    partial void OnMaNamHocChanging(int value);
    partial void OnMaNamHocChanged();
    #endregion
		
		public LopHoc_Lop()
		{
			this._HocSinh_HocSinhLopHocs = new EntitySet<HocSinh_HocSinhLopHoc>(new Action<HocSinh_HocSinhLopHoc>(this.attach_HocSinh_HocSinhLopHocs), new Action<HocSinh_HocSinhLopHoc>(this.detach_HocSinh_HocSinhLopHocs));
			this._LopHoc_GVCNs = new EntitySet<LopHoc_GVCN>(new Action<LopHoc_GVCN>(this.attach_LopHoc_GVCNs), new Action<LopHoc_GVCN>(this.detach_LopHoc_GVCNs));
			this._LopHoc_MonHocTKBs = new EntitySet<LopHoc_MonHocTKB>(new Action<LopHoc_MonHocTKB>(this.attach_LopHoc_MonHocTKBs), new Action<LopHoc_MonHocTKB>(this.detach_LopHoc_MonHocTKBs));
			this._LopHoc_ThongBaos = new EntitySet<LopHoc_ThongBao>(new Action<LopHoc_ThongBao>(this.attach_LopHoc_ThongBaos), new Action<LopHoc_ThongBao>(this.detach_LopHoc_ThongBaos));
			this._CauHinh_NamHoc = default(EntityRef<CauHinh_NamHoc>);
			this._DanhMuc_KhoiLop = default(EntityRef<DanhMuc_KhoiLop>);
			this._DanhMuc_NganhHoc = default(EntityRef<DanhMuc_NganhHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLopHoc", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenLopHoc
		{
			get
			{
				return this._TenLopHoc;
			}
			set
			{
				if ((this._TenLopHoc != value))
				{
					this.OnTenLopHocChanging(value);
					this.SendPropertyChanging();
					this._TenLopHoc = value;
					this.SendPropertyChanged("TenLopHoc");
					this.OnTenLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNganhHoc", DbType="Int NOT NULL")]
		public int MaNganhHoc
		{
			get
			{
				return this._MaNganhHoc;
			}
			set
			{
				if ((this._MaNganhHoc != value))
				{
					if (this._DanhMuc_NganhHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNganhHocChanging(value);
					this.SendPropertyChanging();
					this._MaNganhHoc = value;
					this.SendPropertyChanged("MaNganhHoc");
					this.OnMaNganhHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoiLop", DbType="Int NOT NULL")]
		public int MaKhoiLop
		{
			get
			{
				return this._MaKhoiLop;
			}
			set
			{
				if ((this._MaKhoiLop != value))
				{
					if (this._DanhMuc_KhoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._MaKhoiLop = value;
					this.SendPropertyChanged("MaKhoiLop");
					this.OnMaKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiSo", DbType="Int NOT NULL")]
		public int SiSo
		{
			get
			{
				return this._SiSo;
			}
			set
			{
				if ((this._SiSo != value))
				{
					this.OnSiSoChanging(value);
					this.SendPropertyChanging();
					this._SiSo = value;
					this.SendPropertyChanged("SiSo");
					this.OnSiSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", DbType="Int NOT NULL")]
		public int MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					if (this._CauHinh_NamHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_Lop_HocSinh_HocSinhLopHoc", Storage="_HocSinh_HocSinhLopHocs", ThisKey="MaLopHoc", OtherKey="MaLopHoc")]
		public EntitySet<HocSinh_HocSinhLopHoc> HocSinh_HocSinhLopHocs
		{
			get
			{
				return this._HocSinh_HocSinhLopHocs;
			}
			set
			{
				this._HocSinh_HocSinhLopHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_Lop_LopHoc_GVCN", Storage="_LopHoc_GVCNs", ThisKey="MaLopHoc", OtherKey="MaLopHoc")]
		public EntitySet<LopHoc_GVCN> LopHoc_GVCNs
		{
			get
			{
				return this._LopHoc_GVCNs;
			}
			set
			{
				this._LopHoc_GVCNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_Lop_LopHoc_MonHocTKB", Storage="_LopHoc_MonHocTKBs", ThisKey="MaLopHoc", OtherKey="MaLopHoc")]
		public EntitySet<LopHoc_MonHocTKB> LopHoc_MonHocTKBs
		{
			get
			{
				return this._LopHoc_MonHocTKBs;
			}
			set
			{
				this._LopHoc_MonHocTKBs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_Lop_LopHoc_ThongBao", Storage="_LopHoc_ThongBaos", ThisKey="MaLopHoc", OtherKey="MaLopHoc")]
		public EntitySet<LopHoc_ThongBao> LopHoc_ThongBaos
		{
			get
			{
				return this._LopHoc_ThongBaos;
			}
			set
			{
				this._LopHoc_ThongBaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_NamHoc_LopHoc_Lop", Storage="_CauHinh_NamHoc", ThisKey="MaNamHoc", OtherKey="MaNamHoc", IsForeignKey=true)]
		public CauHinh_NamHoc CauHinh_NamHoc
		{
			get
			{
				return this._CauHinh_NamHoc.Entity;
			}
			set
			{
				CauHinh_NamHoc previousValue = this._CauHinh_NamHoc.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_NamHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_NamHoc.Entity = null;
						previousValue.LopHoc_Lops.Remove(this);
					}
					this._CauHinh_NamHoc.Entity = value;
					if ((value != null))
					{
						value.LopHoc_Lops.Add(this);
						this._MaNamHoc = value.MaNamHoc;
					}
					else
					{
						this._MaNamHoc = default(int);
					}
					this.SendPropertyChanged("CauHinh_NamHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_KhoiLop_LopHoc_Lop", Storage="_DanhMuc_KhoiLop", ThisKey="MaKhoiLop", OtherKey="MaKhoiLop", IsForeignKey=true)]
		public DanhMuc_KhoiLop DanhMuc_KhoiLop
		{
			get
			{
				return this._DanhMuc_KhoiLop.Entity;
			}
			set
			{
				DanhMuc_KhoiLop previousValue = this._DanhMuc_KhoiLop.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc_KhoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc_KhoiLop.Entity = null;
						previousValue.LopHoc_Lops.Remove(this);
					}
					this._DanhMuc_KhoiLop.Entity = value;
					if ((value != null))
					{
						value.LopHoc_Lops.Add(this);
						this._MaKhoiLop = value.MaKhoiLop;
					}
					else
					{
						this._MaKhoiLop = default(int);
					}
					this.SendPropertyChanged("DanhMuc_KhoiLop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_NganhHoc_LopHoc_Lop", Storage="_DanhMuc_NganhHoc", ThisKey="MaNganhHoc", OtherKey="MaNganhHoc", IsForeignKey=true)]
		public DanhMuc_NganhHoc DanhMuc_NganhHoc
		{
			get
			{
				return this._DanhMuc_NganhHoc.Entity;
			}
			set
			{
				DanhMuc_NganhHoc previousValue = this._DanhMuc_NganhHoc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc_NganhHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc_NganhHoc.Entity = null;
						previousValue.LopHoc_Lops.Remove(this);
					}
					this._DanhMuc_NganhHoc.Entity = value;
					if ((value != null))
					{
						value.LopHoc_Lops.Add(this);
						this._MaNganhHoc = value.MaNganhHoc;
					}
					else
					{
						this._MaNganhHoc = default(int);
					}
					this.SendPropertyChanged("DanhMuc_NganhHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinh_HocSinhLopHocs(HocSinh_HocSinhLopHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_Lop = this;
		}
		
		private void detach_HocSinh_HocSinhLopHocs(HocSinh_HocSinhLopHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_Lop = null;
		}
		
		private void attach_LopHoc_GVCNs(LopHoc_GVCN entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_Lop = this;
		}
		
		private void detach_LopHoc_GVCNs(LopHoc_GVCN entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_Lop = null;
		}
		
		private void attach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_Lop = this;
		}
		
		private void detach_LopHoc_MonHocTKBs(LopHoc_MonHocTKB entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_Lop = null;
		}
		
		private void attach_LopHoc_ThongBaos(LopHoc_ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_Lop = this;
		}
		
		private void detach_LopHoc_ThongBaos(LopHoc_ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_Lop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc_MonHocTKB")]
	public partial class LopHoc_MonHocTKB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMonHocTKB;
		
		private int _MaHocKy;
		
		private int _MaThu;
		
		private int _MaBuoi;
		
		private int _MaTiet;
		
		private int _MaLopHoc;
		
		private int _MaMonHoc;
		
		private int _MaGiaoVien;
		
		private EntityRef<CauHinh_Buoi> _CauHinh_Buoi;
		
		private EntityRef<CauHinh_HocKy> _CauHinh_HocKy;
		
		private EntityRef<CauHinh_Thu> _CauHinh_Thu;
		
		private EntityRef<DanhMuc_MonHoc> _DanhMuc_MonHoc;
		
		private EntityRef<DanhMuc_Tiet> _DanhMuc_Tiet;
		
		private EntityRef<LopHoc_GiaoVien> _LopHoc_GiaoVien;
		
		private EntityRef<LopHoc_Lop> _LopHoc_Lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonHocTKBChanging(int value);
    partial void OnMaMonHocTKBChanged();
    partial void OnMaHocKyChanging(int value);
    partial void OnMaHocKyChanged();
    partial void OnMaThuChanging(int value);
    partial void OnMaThuChanged();
    partial void OnMaBuoiChanging(int value);
    partial void OnMaBuoiChanged();
    partial void OnMaTietChanging(int value);
    partial void OnMaTietChanged();
    partial void OnMaLopHocChanging(int value);
    partial void OnMaLopHocChanged();
    partial void OnMaMonHocChanging(int value);
    partial void OnMaMonHocChanged();
    partial void OnMaGiaoVienChanging(int value);
    partial void OnMaGiaoVienChanged();
    #endregion
		
		public LopHoc_MonHocTKB()
		{
			this._CauHinh_Buoi = default(EntityRef<CauHinh_Buoi>);
			this._CauHinh_HocKy = default(EntityRef<CauHinh_HocKy>);
			this._CauHinh_Thu = default(EntityRef<CauHinh_Thu>);
			this._DanhMuc_MonHoc = default(EntityRef<DanhMuc_MonHoc>);
			this._DanhMuc_Tiet = default(EntityRef<DanhMuc_Tiet>);
			this._LopHoc_GiaoVien = default(EntityRef<LopHoc_GiaoVien>);
			this._LopHoc_Lop = default(EntityRef<LopHoc_Lop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHocTKB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaMonHocTKB
		{
			get
			{
				return this._MaMonHocTKB;
			}
			set
			{
				if ((this._MaMonHocTKB != value))
				{
					this.OnMaMonHocTKBChanging(value);
					this.SendPropertyChanging();
					this._MaMonHocTKB = value;
					this.SendPropertyChanged("MaMonHocTKB");
					this.OnMaMonHocTKBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="Int NOT NULL")]
		public int MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._CauHinh_HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThu", DbType="Int NOT NULL")]
		public int MaThu
		{
			get
			{
				return this._MaThu;
			}
			set
			{
				if ((this._MaThu != value))
				{
					if (this._CauHinh_Thu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThuChanging(value);
					this.SendPropertyChanging();
					this._MaThu = value;
					this.SendPropertyChanged("MaThu");
					this.OnMaThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBuoi", DbType="Int NOT NULL")]
		public int MaBuoi
		{
			get
			{
				return this._MaBuoi;
			}
			set
			{
				if ((this._MaBuoi != value))
				{
					if (this._CauHinh_Buoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBuoiChanging(value);
					this.SendPropertyChanging();
					this._MaBuoi = value;
					this.SendPropertyChanged("MaBuoi");
					this.OnMaBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTiet", DbType="Int NOT NULL")]
		public int MaTiet
		{
			get
			{
				return this._MaTiet;
			}
			set
			{
				if ((this._MaTiet != value))
				{
					if (this._DanhMuc_Tiet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTietChanging(value);
					this.SendPropertyChanging();
					this._MaTiet = value;
					this.SendPropertyChanged("MaTiet");
					this.OnMaTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="Int NOT NULL")]
		public int MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					if (this._LopHoc_Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="Int NOT NULL")]
		public int MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._DanhMuc_MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="Int NOT NULL")]
		public int MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._LopHoc_GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_Buoi_LopHoc_MonHocTKB", Storage="_CauHinh_Buoi", ThisKey="MaBuoi", OtherKey="MaBuoi", IsForeignKey=true)]
		public CauHinh_Buoi CauHinh_Buoi
		{
			get
			{
				return this._CauHinh_Buoi.Entity;
			}
			set
			{
				CauHinh_Buoi previousValue = this._CauHinh_Buoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_Buoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_Buoi.Entity = null;
						previousValue.LopHoc_MonHocTKBs.Remove(this);
					}
					this._CauHinh_Buoi.Entity = value;
					if ((value != null))
					{
						value.LopHoc_MonHocTKBs.Add(this);
						this._MaBuoi = value.MaBuoi;
					}
					else
					{
						this._MaBuoi = default(int);
					}
					this.SendPropertyChanged("CauHinh_Buoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_LopHoc_MonHocTKB", Storage="_CauHinh_HocKy", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public CauHinh_HocKy CauHinh_HocKy
		{
			get
			{
				return this._CauHinh_HocKy.Entity;
			}
			set
			{
				CauHinh_HocKy previousValue = this._CauHinh_HocKy.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_HocKy.Entity = null;
						previousValue.LopHoc_MonHocTKBs.Remove(this);
					}
					this._CauHinh_HocKy.Entity = value;
					if ((value != null))
					{
						value.LopHoc_MonHocTKBs.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(int);
					}
					this.SendPropertyChanged("CauHinh_HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_Thu_LopHoc_MonHocTKB", Storage="_CauHinh_Thu", ThisKey="MaThu", OtherKey="MaThu", IsForeignKey=true)]
		public CauHinh_Thu CauHinh_Thu
		{
			get
			{
				return this._CauHinh_Thu.Entity;
			}
			set
			{
				CauHinh_Thu previousValue = this._CauHinh_Thu.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_Thu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_Thu.Entity = null;
						previousValue.LopHoc_MonHocTKBs.Remove(this);
					}
					this._CauHinh_Thu.Entity = value;
					if ((value != null))
					{
						value.LopHoc_MonHocTKBs.Add(this);
						this._MaThu = value.MaThu;
					}
					else
					{
						this._MaThu = default(int);
					}
					this.SendPropertyChanged("CauHinh_Thu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_MonHoc_LopHoc_MonHocTKB", Storage="_DanhMuc_MonHoc", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public DanhMuc_MonHoc DanhMuc_MonHoc
		{
			get
			{
				return this._DanhMuc_MonHoc.Entity;
			}
			set
			{
				DanhMuc_MonHoc previousValue = this._DanhMuc_MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc_MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc_MonHoc.Entity = null;
						previousValue.LopHoc_MonHocTKBs.Remove(this);
					}
					this._DanhMuc_MonHoc.Entity = value;
					if ((value != null))
					{
						value.LopHoc_MonHocTKBs.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(int);
					}
					this.SendPropertyChanged("DanhMuc_MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_Tiet_LopHoc_MonHocTKB", Storage="_DanhMuc_Tiet", ThisKey="MaTiet", OtherKey="MaTiet", IsForeignKey=true)]
		public DanhMuc_Tiet DanhMuc_Tiet
		{
			get
			{
				return this._DanhMuc_Tiet.Entity;
			}
			set
			{
				DanhMuc_Tiet previousValue = this._DanhMuc_Tiet.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc_Tiet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc_Tiet.Entity = null;
						previousValue.LopHoc_MonHocTKBs.Remove(this);
					}
					this._DanhMuc_Tiet.Entity = value;
					if ((value != null))
					{
						value.LopHoc_MonHocTKBs.Add(this);
						this._MaTiet = value.MaTiet;
					}
					else
					{
						this._MaTiet = default(int);
					}
					this.SendPropertyChanged("DanhMuc_Tiet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_GiaoVien_LopHoc_MonHocTKB", Storage="_LopHoc_GiaoVien", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public LopHoc_GiaoVien LopHoc_GiaoVien
		{
			get
			{
				return this._LopHoc_GiaoVien.Entity;
			}
			set
			{
				LopHoc_GiaoVien previousValue = this._LopHoc_GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc_GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc_GiaoVien.Entity = null;
						previousValue.LopHoc_MonHocTKBs.Remove(this);
					}
					this._LopHoc_GiaoVien.Entity = value;
					if ((value != null))
					{
						value.LopHoc_MonHocTKBs.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(int);
					}
					this.SendPropertyChanged("LopHoc_GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_Lop_LopHoc_MonHocTKB", Storage="_LopHoc_Lop", ThisKey="MaLopHoc", OtherKey="MaLopHoc", IsForeignKey=true)]
		public LopHoc_Lop LopHoc_Lop
		{
			get
			{
				return this._LopHoc_Lop.Entity;
			}
			set
			{
				LopHoc_Lop previousValue = this._LopHoc_Lop.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc_Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc_Lop.Entity = null;
						previousValue.LopHoc_MonHocTKBs.Remove(this);
					}
					this._LopHoc_Lop.Entity = value;
					if ((value != null))
					{
						value.LopHoc_MonHocTKBs.Add(this);
						this._MaLopHoc = value.MaLopHoc;
					}
					else
					{
						this._MaLopHoc = default(int);
					}
					this.SendPropertyChanged("LopHoc_Lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc_ThongBao")]
	public partial class LopHoc_ThongBao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThongBaoLop;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private System.DateTime _Ngay;
		
		private int _MaLopHoc;
		
		private int _MaHocKy;
		
		private EntityRef<CauHinh_HocKy> _CauHinh_HocKy;
		
		private EntityRef<LopHoc_Lop> _LopHoc_Lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThongBaoLopChanging(int value);
    partial void OnMaThongBaoLopChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnMaLopHocChanging(int value);
    partial void OnMaLopHocChanged();
    partial void OnMaHocKyChanging(int value);
    partial void OnMaHocKyChanged();
    #endregion
		
		public LopHoc_ThongBao()
		{
			this._CauHinh_HocKy = default(EntityRef<CauHinh_HocKy>);
			this._LopHoc_Lop = default(EntityRef<LopHoc_Lop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThongBaoLop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThongBaoLop
		{
			get
			{
				return this._MaThongBaoLop;
			}
			set
			{
				if ((this._MaThongBaoLop != value))
				{
					this.OnMaThongBaoLopChanging(value);
					this.SendPropertyChanging();
					this._MaThongBaoLop = value;
					this.SendPropertyChanged("MaThongBaoLop");
					this.OnMaThongBaoLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(300)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="Int NOT NULL")]
		public int MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					if (this._LopHoc_Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="Int NOT NULL")]
		public int MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._CauHinh_HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHinh_HocKy_LopHoc_ThongBao", Storage="_CauHinh_HocKy", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public CauHinh_HocKy CauHinh_HocKy
		{
			get
			{
				return this._CauHinh_HocKy.Entity;
			}
			set
			{
				CauHinh_HocKy previousValue = this._CauHinh_HocKy.Entity;
				if (((previousValue != value) 
							|| (this._CauHinh_HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHinh_HocKy.Entity = null;
						previousValue.LopHoc_ThongBaos.Remove(this);
					}
					this._CauHinh_HocKy.Entity = value;
					if ((value != null))
					{
						value.LopHoc_ThongBaos.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(int);
					}
					this.SendPropertyChanged("CauHinh_HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_Lop_LopHoc_ThongBao", Storage="_LopHoc_Lop", ThisKey="MaLopHoc", OtherKey="MaLopHoc", IsForeignKey=true)]
		public LopHoc_Lop LopHoc_Lop
		{
			get
			{
				return this._LopHoc_Lop.Entity;
			}
			set
			{
				LopHoc_Lop previousValue = this._LopHoc_Lop.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc_Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc_Lop.Entity = null;
						previousValue.LopHoc_ThongBaos.Remove(this);
					}
					this._LopHoc_Lop.Entity = value;
					if ((value != null))
					{
						value.LopHoc_ThongBaos.Add(this);
						this._MaLopHoc = value.MaLopHoc;
					}
					else
					{
						this._MaLopHoc = default(int);
					}
					this.SendPropertyChanged("LopHoc_Lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schools")]
	public partial class School : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SchoolId;
		
		private string _SchoolName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchoolIdChanging(int value);
    partial void OnSchoolIdChanged();
    partial void OnSchoolNameChanging(string value);
    partial void OnSchoolNameChanged();
    #endregion
		
		public School()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="NVarChar(200)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this.OnSchoolNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolName = value;
					this.SendPropertyChanged("SchoolName");
					this.OnSchoolNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.System_Parameters")]
	public partial class System_Parameter
	{
		
		private System.Guid _AdminRoleId;
		
		private System.Guid _ParentsRoleId;
		
		private System.Guid _RoleGVCNId;
		
		private System.Guid _RoleGVBMId;
		
		private int _HomePageFunctionId;
		
		private string _FuncFlagAdminRoleOnly;
		
		private string _FuncFlagParentsRoleOnly;
		
		private string _FuncFlagOtherRoles;
		
		public System_Parameter()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminRoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AdminRoleId
		{
			get
			{
				return this._AdminRoleId;
			}
			set
			{
				if ((this._AdminRoleId != value))
				{
					this._AdminRoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentsRoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentsRoleId
		{
			get
			{
				return this._ParentsRoleId;
			}
			set
			{
				if ((this._ParentsRoleId != value))
				{
					this._ParentsRoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGVCNId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleGVCNId
		{
			get
			{
				return this._RoleGVCNId;
			}
			set
			{
				if ((this._RoleGVCNId != value))
				{
					this._RoleGVCNId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGVBMId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleGVBMId
		{
			get
			{
				return this._RoleGVBMId;
			}
			set
			{
				if ((this._RoleGVBMId != value))
				{
					this._RoleGVBMId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePageFunctionId", DbType="Int NOT NULL")]
		public int HomePageFunctionId
		{
			get
			{
				return this._HomePageFunctionId;
			}
			set
			{
				if ((this._HomePageFunctionId != value))
				{
					this._HomePageFunctionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuncFlagAdminRoleOnly", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FuncFlagAdminRoleOnly
		{
			get
			{
				return this._FuncFlagAdminRoleOnly;
			}
			set
			{
				if ((this._FuncFlagAdminRoleOnly != value))
				{
					this._FuncFlagAdminRoleOnly = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuncFlagParentsRoleOnly", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FuncFlagParentsRoleOnly
		{
			get
			{
				return this._FuncFlagParentsRoleOnly;
			}
			set
			{
				if ((this._FuncFlagParentsRoleOnly != value))
				{
					this._FuncFlagParentsRoleOnly = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuncFlagOtherRoles", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FuncFlagOtherRoles
		{
			get
			{
				return this._FuncFlagOtherRoles;
			}
			set
			{
				if ((this._FuncFlagOtherRoles != value))
				{
					this._FuncFlagOtherRoles = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManagement_Accessibility")]
	public partial class UserManagement_Accessibility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccessibilityId;
		
		private string _AccessibilityName;
		
		private EntitySet<UserManagement_AuthorizedPage> _UserManagement_AuthorizedPages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccessibilityIdChanging(int value);
    partial void OnAccessibilityIdChanged();
    partial void OnAccessibilityNameChanging(string value);
    partial void OnAccessibilityNameChanged();
    #endregion
		
		public UserManagement_Accessibility()
		{
			this._UserManagement_AuthorizedPages = new EntitySet<UserManagement_AuthorizedPage>(new Action<UserManagement_AuthorizedPage>(this.attach_UserManagement_AuthorizedPages), new Action<UserManagement_AuthorizedPage>(this.detach_UserManagement_AuthorizedPages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessibilityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccessibilityId
		{
			get
			{
				return this._AccessibilityId;
			}
			set
			{
				if ((this._AccessibilityId != value))
				{
					this.OnAccessibilityIdChanging(value);
					this.SendPropertyChanging();
					this._AccessibilityId = value;
					this.SendPropertyChanged("AccessibilityId");
					this.OnAccessibilityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessibilityName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccessibilityName
		{
			get
			{
				return this._AccessibilityName;
			}
			set
			{
				if ((this._AccessibilityName != value))
				{
					this.OnAccessibilityNameChanging(value);
					this.SendPropertyChanging();
					this._AccessibilityName = value;
					this.SendPropertyChanged("AccessibilityName");
					this.OnAccessibilityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManagement_Accessibility_UserManagement_AuthorizedPage", Storage="_UserManagement_AuthorizedPages", ThisKey="AccessibilityId", OtherKey="AccessibilityId")]
		public EntitySet<UserManagement_AuthorizedPage> UserManagement_AuthorizedPages
		{
			get
			{
				return this._UserManagement_AuthorizedPages;
			}
			set
			{
				this._UserManagement_AuthorizedPages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserManagement_AuthorizedPages(UserManagement_AuthorizedPage entity)
		{
			this.SendPropertyChanging();
			entity.UserManagement_Accessibility = this;
		}
		
		private void detach_UserManagement_AuthorizedPages(UserManagement_AuthorizedPage entity)
		{
			this.SendPropertyChanging();
			entity.UserManagement_Accessibility = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManagement_Authorizations")]
	public partial class UserManagement_Authorization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthorizationId;
		
		private System.Guid _RoleId;
		
		private int _AuthorizedPagePathId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<UserManagement_AuthorizedPage> _UserManagement_AuthorizedPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthorizationIdChanging(int value);
    partial void OnAuthorizationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnAuthorizedPagePathIdChanging(int value);
    partial void OnAuthorizedPagePathIdChanged();
    #endregion
		
		public UserManagement_Authorization()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._UserManagement_AuthorizedPage = default(EntityRef<UserManagement_AuthorizedPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AuthorizationId
		{
			get
			{
				return this._AuthorizationId;
			}
			set
			{
				if ((this._AuthorizationId != value))
				{
					this.OnAuthorizationIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorizationId = value;
					this.SendPropertyChanged("AuthorizationId");
					this.OnAuthorizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedPagePathId", DbType="Int NOT NULL")]
		public int AuthorizedPagePathId
		{
			get
			{
				return this._AuthorizedPagePathId;
			}
			set
			{
				if ((this._AuthorizedPagePathId != value))
				{
					if (this._UserManagement_AuthorizedPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorizedPagePathIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedPagePathId = value;
					this.SendPropertyChanged("AuthorizedPagePathId");
					this.OnAuthorizedPagePathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_UserManagement_Authorization", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.UserManagement_Authorizations.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.UserManagement_Authorizations.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManagement_AuthorizedPage_UserManagement_Authorization", Storage="_UserManagement_AuthorizedPage", ThisKey="AuthorizedPagePathId", OtherKey="AuthorizedPageId", IsForeignKey=true)]
		public UserManagement_AuthorizedPage UserManagement_AuthorizedPage
		{
			get
			{
				return this._UserManagement_AuthorizedPage.Entity;
			}
			set
			{
				UserManagement_AuthorizedPage previousValue = this._UserManagement_AuthorizedPage.Entity;
				if (((previousValue != value) 
							|| (this._UserManagement_AuthorizedPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserManagement_AuthorizedPage.Entity = null;
						previousValue.UserManagement_Authorizations.Remove(this);
					}
					this._UserManagement_AuthorizedPage.Entity = value;
					if ((value != null))
					{
						value.UserManagement_Authorizations.Add(this);
						this._AuthorizedPagePathId = value.AuthorizedPageId;
					}
					else
					{
						this._AuthorizedPagePathId = default(int);
					}
					this.SendPropertyChanged("UserManagement_AuthorizedPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManagement_AuthorizedPages")]
	public partial class UserManagement_AuthorizedPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthorizedPageId;
		
		private int _FunctionId;
		
		private int _AccessibilityId;
		
		private int _PagePathId;
		
		private string _Description;
		
		private EntitySet<UserManagement_Authorization> _UserManagement_Authorizations;
		
		private EntityRef<UserManagement_Accessibility> _UserManagement_Accessibility;
		
		private EntityRef<UserManagement_Function> _UserManagement_Function;
		
		private EntityRef<UserManagement_PagePath> _UserManagement_PagePath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthorizedPageIdChanging(int value);
    partial void OnAuthorizedPageIdChanged();
    partial void OnFunctionIdChanging(int value);
    partial void OnFunctionIdChanged();
    partial void OnAccessibilityIdChanging(int value);
    partial void OnAccessibilityIdChanged();
    partial void OnPagePathIdChanging(int value);
    partial void OnPagePathIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public UserManagement_AuthorizedPage()
		{
			this._UserManagement_Authorizations = new EntitySet<UserManagement_Authorization>(new Action<UserManagement_Authorization>(this.attach_UserManagement_Authorizations), new Action<UserManagement_Authorization>(this.detach_UserManagement_Authorizations));
			this._UserManagement_Accessibility = default(EntityRef<UserManagement_Accessibility>);
			this._UserManagement_Function = default(EntityRef<UserManagement_Function>);
			this._UserManagement_PagePath = default(EntityRef<UserManagement_PagePath>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedPageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AuthorizedPageId
		{
			get
			{
				return this._AuthorizedPageId;
			}
			set
			{
				if ((this._AuthorizedPageId != value))
				{
					this.OnAuthorizedPageIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedPageId = value;
					this.SendPropertyChanged("AuthorizedPageId");
					this.OnAuthorizedPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionId", DbType="Int NOT NULL")]
		public int FunctionId
		{
			get
			{
				return this._FunctionId;
			}
			set
			{
				if ((this._FunctionId != value))
				{
					if (this._UserManagement_Function.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctionIdChanging(value);
					this.SendPropertyChanging();
					this._FunctionId = value;
					this.SendPropertyChanged("FunctionId");
					this.OnFunctionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessibilityId", DbType="Int NOT NULL")]
		public int AccessibilityId
		{
			get
			{
				return this._AccessibilityId;
			}
			set
			{
				if ((this._AccessibilityId != value))
				{
					if (this._UserManagement_Accessibility.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccessibilityIdChanging(value);
					this.SendPropertyChanging();
					this._AccessibilityId = value;
					this.SendPropertyChanged("AccessibilityId");
					this.OnAccessibilityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PagePathId", DbType="Int NOT NULL")]
		public int PagePathId
		{
			get
			{
				return this._PagePathId;
			}
			set
			{
				if ((this._PagePathId != value))
				{
					if (this._UserManagement_PagePath.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPagePathIdChanging(value);
					this.SendPropertyChanging();
					this._PagePathId = value;
					this.SendPropertyChanged("PagePathId");
					this.OnPagePathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManagement_AuthorizedPage_UserManagement_Authorization", Storage="_UserManagement_Authorizations", ThisKey="AuthorizedPageId", OtherKey="AuthorizedPagePathId")]
		public EntitySet<UserManagement_Authorization> UserManagement_Authorizations
		{
			get
			{
				return this._UserManagement_Authorizations;
			}
			set
			{
				this._UserManagement_Authorizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManagement_Accessibility_UserManagement_AuthorizedPage", Storage="_UserManagement_Accessibility", ThisKey="AccessibilityId", OtherKey="AccessibilityId", IsForeignKey=true)]
		public UserManagement_Accessibility UserManagement_Accessibility
		{
			get
			{
				return this._UserManagement_Accessibility.Entity;
			}
			set
			{
				UserManagement_Accessibility previousValue = this._UserManagement_Accessibility.Entity;
				if (((previousValue != value) 
							|| (this._UserManagement_Accessibility.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserManagement_Accessibility.Entity = null;
						previousValue.UserManagement_AuthorizedPages.Remove(this);
					}
					this._UserManagement_Accessibility.Entity = value;
					if ((value != null))
					{
						value.UserManagement_AuthorizedPages.Add(this);
						this._AccessibilityId = value.AccessibilityId;
					}
					else
					{
						this._AccessibilityId = default(int);
					}
					this.SendPropertyChanged("UserManagement_Accessibility");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManagement_Function_UserManagement_AuthorizedPage", Storage="_UserManagement_Function", ThisKey="FunctionId", OtherKey="FunctionId", IsForeignKey=true)]
		public UserManagement_Function UserManagement_Function
		{
			get
			{
				return this._UserManagement_Function.Entity;
			}
			set
			{
				UserManagement_Function previousValue = this._UserManagement_Function.Entity;
				if (((previousValue != value) 
							|| (this._UserManagement_Function.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserManagement_Function.Entity = null;
						previousValue.UserManagement_AuthorizedPages.Remove(this);
					}
					this._UserManagement_Function.Entity = value;
					if ((value != null))
					{
						value.UserManagement_AuthorizedPages.Add(this);
						this._FunctionId = value.FunctionId;
					}
					else
					{
						this._FunctionId = default(int);
					}
					this.SendPropertyChanged("UserManagement_Function");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManagement_PagePath_UserManagement_AuthorizedPage", Storage="_UserManagement_PagePath", ThisKey="PagePathId", OtherKey="PagePathId", IsForeignKey=true)]
		public UserManagement_PagePath UserManagement_PagePath
		{
			get
			{
				return this._UserManagement_PagePath.Entity;
			}
			set
			{
				UserManagement_PagePath previousValue = this._UserManagement_PagePath.Entity;
				if (((previousValue != value) 
							|| (this._UserManagement_PagePath.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserManagement_PagePath.Entity = null;
						previousValue.UserManagement_AuthorizedPages.Remove(this);
					}
					this._UserManagement_PagePath.Entity = value;
					if ((value != null))
					{
						value.UserManagement_AuthorizedPages.Add(this);
						this._PagePathId = value.PagePathId;
					}
					else
					{
						this._PagePathId = default(int);
					}
					this.SendPropertyChanged("UserManagement_PagePath");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserManagement_Authorizations(UserManagement_Authorization entity)
		{
			this.SendPropertyChanging();
			entity.UserManagement_AuthorizedPage = this;
		}
		
		private void detach_UserManagement_Authorizations(UserManagement_Authorization entity)
		{
			this.SendPropertyChanging();
			entity.UserManagement_AuthorizedPage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManagement_Functions")]
	public partial class UserManagement_Function : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FunctionId;
		
		private string _FunctionName;
		
		private string _FunctionCategory;
		
		private string _FunctionFlag;
		
		private System.Nullable<int> _ParentFunctionId;
		
		private EntitySet<UserManagement_AuthorizedPage> _UserManagement_AuthorizedPages;
		
		private EntitySet<UserManagement_Menus> _UserManagement_Menus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFunctionIdChanging(int value);
    partial void OnFunctionIdChanged();
    partial void OnFunctionNameChanging(string value);
    partial void OnFunctionNameChanged();
    partial void OnFunctionCategoryChanging(string value);
    partial void OnFunctionCategoryChanged();
    partial void OnFunctionFlagChanging(string value);
    partial void OnFunctionFlagChanged();
    partial void OnParentFunctionIdChanging(System.Nullable<int> value);
    partial void OnParentFunctionIdChanged();
    #endregion
		
		public UserManagement_Function()
		{
			this._UserManagement_AuthorizedPages = new EntitySet<UserManagement_AuthorizedPage>(new Action<UserManagement_AuthorizedPage>(this.attach_UserManagement_AuthorizedPages), new Action<UserManagement_AuthorizedPage>(this.detach_UserManagement_AuthorizedPages));
			this._UserManagement_Menus = new EntitySet<UserManagement_Menus>(new Action<UserManagement_Menus>(this.attach_UserManagement_Menus), new Action<UserManagement_Menus>(this.detach_UserManagement_Menus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FunctionId
		{
			get
			{
				return this._FunctionId;
			}
			set
			{
				if ((this._FunctionId != value))
				{
					this.OnFunctionIdChanging(value);
					this.SendPropertyChanging();
					this._FunctionId = value;
					this.SendPropertyChanged("FunctionId");
					this.OnFunctionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FunctionName
		{
			get
			{
				return this._FunctionName;
			}
			set
			{
				if ((this._FunctionName != value))
				{
					this.OnFunctionNameChanging(value);
					this.SendPropertyChanging();
					this._FunctionName = value;
					this.SendPropertyChanged("FunctionName");
					this.OnFunctionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionCategory", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FunctionCategory
		{
			get
			{
				return this._FunctionCategory;
			}
			set
			{
				if ((this._FunctionCategory != value))
				{
					this.OnFunctionCategoryChanging(value);
					this.SendPropertyChanging();
					this._FunctionCategory = value;
					this.SendPropertyChanged("FunctionCategory");
					this.OnFunctionCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionFlag", DbType="NVarChar(50)")]
		public string FunctionFlag
		{
			get
			{
				return this._FunctionFlag;
			}
			set
			{
				if ((this._FunctionFlag != value))
				{
					this.OnFunctionFlagChanging(value);
					this.SendPropertyChanging();
					this._FunctionFlag = value;
					this.SendPropertyChanged("FunctionFlag");
					this.OnFunctionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentFunctionId", DbType="Int")]
		public System.Nullable<int> ParentFunctionId
		{
			get
			{
				return this._ParentFunctionId;
			}
			set
			{
				if ((this._ParentFunctionId != value))
				{
					this.OnParentFunctionIdChanging(value);
					this.SendPropertyChanging();
					this._ParentFunctionId = value;
					this.SendPropertyChanged("ParentFunctionId");
					this.OnParentFunctionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManagement_Function_UserManagement_AuthorizedPage", Storage="_UserManagement_AuthorizedPages", ThisKey="FunctionId", OtherKey="FunctionId")]
		public EntitySet<UserManagement_AuthorizedPage> UserManagement_AuthorizedPages
		{
			get
			{
				return this._UserManagement_AuthorizedPages;
			}
			set
			{
				this._UserManagement_AuthorizedPages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManagement_Function_UserManagement_Menus", Storage="_UserManagement_Menus", ThisKey="FunctionId", OtherKey="FunctionId")]
		public EntitySet<UserManagement_Menus> UserManagement_Menus
		{
			get
			{
				return this._UserManagement_Menus;
			}
			set
			{
				this._UserManagement_Menus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserManagement_AuthorizedPages(UserManagement_AuthorizedPage entity)
		{
			this.SendPropertyChanging();
			entity.UserManagement_Function = this;
		}
		
		private void detach_UserManagement_AuthorizedPages(UserManagement_AuthorizedPage entity)
		{
			this.SendPropertyChanging();
			entity.UserManagement_Function = null;
		}
		
		private void attach_UserManagement_Menus(UserManagement_Menus entity)
		{
			this.SendPropertyChanging();
			entity.UserManagement_Function = this;
		}
		
		private void detach_UserManagement_Menus(UserManagement_Menus entity)
		{
			this.SendPropertyChanging();
			entity.UserManagement_Function = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManagement_GVCNUsers")]
	public partial class UserManagement_GVCNUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private int _MaGVCN;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<LopHoc_GVCN> _LopHoc_GVCN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnMaGVCNChanging(int value);
    partial void OnMaGVCNChanged();
    #endregion
		
		public UserManagement_GVCNUser()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._LopHoc_GVCN = default(EntityRef<LopHoc_GVCN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGVCN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaGVCN
		{
			get
			{
				return this._MaGVCN;
			}
			set
			{
				if ((this._MaGVCN != value))
				{
					if (this._LopHoc_GVCN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVCNChanging(value);
					this.SendPropertyChanging();
					this._MaGVCN = value;
					this.SendPropertyChanged("MaGVCN");
					this.OnMaGVCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_UserManagement_GVCNUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.UserManagement_GVCNUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.UserManagement_GVCNUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_GVCN_UserManagement_GVCNUser", Storage="_LopHoc_GVCN", ThisKey="MaGVCN", OtherKey="MaGVCN", IsForeignKey=true)]
		public LopHoc_GVCN LopHoc_GVCN
		{
			get
			{
				return this._LopHoc_GVCN.Entity;
			}
			set
			{
				LopHoc_GVCN previousValue = this._LopHoc_GVCN.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc_GVCN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc_GVCN.Entity = null;
						previousValue.UserManagement_GVCNUsers.Remove(this);
					}
					this._LopHoc_GVCN.Entity = value;
					if ((value != null))
					{
						value.UserManagement_GVCNUsers.Add(this);
						this._MaGVCN = value.MaGVCN;
					}
					else
					{
						this._MaGVCN = default(int);
					}
					this.SendPropertyChanged("LopHoc_GVCN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManagement_Menus")]
	public partial class UserManagement_Menus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuId;
		
		private System.Nullable<int> _FunctionId;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<int> _PagePathId;
		
		private System.Nullable<int> _ParentMenuId;
		
		private int _MenuLevel;
		
		private int _DisplayOrder;
		
		private System.Nullable<bool> _Displayed;
		
		private EntityRef<UserManagement_Function> _UserManagement_Function;
		
		private EntityRef<UserManagement_PagePath> _UserManagement_PagePath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnFunctionIdChanging(System.Nullable<int> value);
    partial void OnFunctionIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPagePathIdChanging(System.Nullable<int> value);
    partial void OnPagePathIdChanged();
    partial void OnParentMenuIdChanging(System.Nullable<int> value);
    partial void OnParentMenuIdChanged();
    partial void OnMenuLevelChanging(int value);
    partial void OnMenuLevelChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnDisplayedChanging(System.Nullable<bool> value);
    partial void OnDisplayedChanged();
    #endregion
		
		public UserManagement_Menus()
		{
			this._UserManagement_Function = default(EntityRef<UserManagement_Function>);
			this._UserManagement_PagePath = default(EntityRef<UserManagement_PagePath>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionId", DbType="Int")]
		public System.Nullable<int> FunctionId
		{
			get
			{
				return this._FunctionId;
			}
			set
			{
				if ((this._FunctionId != value))
				{
					if (this._UserManagement_Function.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctionIdChanging(value);
					this.SendPropertyChanging();
					this._FunctionId = value;
					this.SendPropertyChanged("FunctionId");
					this.OnFunctionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PagePathId", DbType="Int")]
		public System.Nullable<int> PagePathId
		{
			get
			{
				return this._PagePathId;
			}
			set
			{
				if ((this._PagePathId != value))
				{
					if (this._UserManagement_PagePath.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPagePathIdChanging(value);
					this.SendPropertyChanging();
					this._PagePathId = value;
					this.SendPropertyChanged("PagePathId");
					this.OnPagePathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMenuId", DbType="Int")]
		public System.Nullable<int> ParentMenuId
		{
			get
			{
				return this._ParentMenuId;
			}
			set
			{
				if ((this._ParentMenuId != value))
				{
					this.OnParentMenuIdChanging(value);
					this.SendPropertyChanging();
					this._ParentMenuId = value;
					this.SendPropertyChanged("ParentMenuId");
					this.OnParentMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuLevel", DbType="Int NOT NULL")]
		public int MenuLevel
		{
			get
			{
				return this._MenuLevel;
			}
			set
			{
				if ((this._MenuLevel != value))
				{
					this.OnMenuLevelChanging(value);
					this.SendPropertyChanging();
					this._MenuLevel = value;
					this.SendPropertyChanged("MenuLevel");
					this.OnMenuLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Displayed", DbType="Bit")]
		public System.Nullable<bool> Displayed
		{
			get
			{
				return this._Displayed;
			}
			set
			{
				if ((this._Displayed != value))
				{
					this.OnDisplayedChanging(value);
					this.SendPropertyChanging();
					this._Displayed = value;
					this.SendPropertyChanged("Displayed");
					this.OnDisplayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManagement_Function_UserManagement_Menus", Storage="_UserManagement_Function", ThisKey="FunctionId", OtherKey="FunctionId", IsForeignKey=true)]
		public UserManagement_Function UserManagement_Function
		{
			get
			{
				return this._UserManagement_Function.Entity;
			}
			set
			{
				UserManagement_Function previousValue = this._UserManagement_Function.Entity;
				if (((previousValue != value) 
							|| (this._UserManagement_Function.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserManagement_Function.Entity = null;
						previousValue.UserManagement_Menus.Remove(this);
					}
					this._UserManagement_Function.Entity = value;
					if ((value != null))
					{
						value.UserManagement_Menus.Add(this);
						this._FunctionId = value.FunctionId;
					}
					else
					{
						this._FunctionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserManagement_Function");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManagement_PagePath_UserManagement_Menus", Storage="_UserManagement_PagePath", ThisKey="PagePathId", OtherKey="PagePathId", IsForeignKey=true)]
		public UserManagement_PagePath UserManagement_PagePath
		{
			get
			{
				return this._UserManagement_PagePath.Entity;
			}
			set
			{
				UserManagement_PagePath previousValue = this._UserManagement_PagePath.Entity;
				if (((previousValue != value) 
							|| (this._UserManagement_PagePath.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserManagement_PagePath.Entity = null;
						previousValue.UserManagement_Menus.Remove(this);
					}
					this._UserManagement_PagePath.Entity = value;
					if ((value != null))
					{
						value.UserManagement_Menus.Add(this);
						this._PagePathId = value.PagePathId;
					}
					else
					{
						this._PagePathId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserManagement_PagePath");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManagement_PagePaths")]
	public partial class UserManagement_PagePath : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PagePathId;
		
		private string _PageTitle;
		
		private string _PhysicalPath;
		
		private EntitySet<UserManagement_AuthorizedPage> _UserManagement_AuthorizedPages;
		
		private EntitySet<UserManagement_Menus> _UserManagement_Menus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPagePathIdChanging(int value);
    partial void OnPagePathIdChanged();
    partial void OnPageTitleChanging(string value);
    partial void OnPageTitleChanged();
    partial void OnPhysicalPathChanging(string value);
    partial void OnPhysicalPathChanged();
    #endregion
		
		public UserManagement_PagePath()
		{
			this._UserManagement_AuthorizedPages = new EntitySet<UserManagement_AuthorizedPage>(new Action<UserManagement_AuthorizedPage>(this.attach_UserManagement_AuthorizedPages), new Action<UserManagement_AuthorizedPage>(this.detach_UserManagement_AuthorizedPages));
			this._UserManagement_Menus = new EntitySet<UserManagement_Menus>(new Action<UserManagement_Menus>(this.attach_UserManagement_Menus), new Action<UserManagement_Menus>(this.detach_UserManagement_Menus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PagePathId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PagePathId
		{
			get
			{
				return this._PagePathId;
			}
			set
			{
				if ((this._PagePathId != value))
				{
					this.OnPagePathIdChanging(value);
					this.SendPropertyChanging();
					this._PagePathId = value;
					this.SendPropertyChanged("PagePathId");
					this.OnPagePathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTitle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PageTitle
		{
			get
			{
				return this._PageTitle;
			}
			set
			{
				if ((this._PageTitle != value))
				{
					this.OnPageTitleChanging(value);
					this.SendPropertyChanging();
					this._PageTitle = value;
					this.SendPropertyChanged("PageTitle");
					this.OnPageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalPath", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PhysicalPath
		{
			get
			{
				return this._PhysicalPath;
			}
			set
			{
				if ((this._PhysicalPath != value))
				{
					this.OnPhysicalPathChanging(value);
					this.SendPropertyChanging();
					this._PhysicalPath = value;
					this.SendPropertyChanged("PhysicalPath");
					this.OnPhysicalPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManagement_PagePath_UserManagement_AuthorizedPage", Storage="_UserManagement_AuthorizedPages", ThisKey="PagePathId", OtherKey="PagePathId")]
		public EntitySet<UserManagement_AuthorizedPage> UserManagement_AuthorizedPages
		{
			get
			{
				return this._UserManagement_AuthorizedPages;
			}
			set
			{
				this._UserManagement_AuthorizedPages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserManagement_PagePath_UserManagement_Menus", Storage="_UserManagement_Menus", ThisKey="PagePathId", OtherKey="PagePathId")]
		public EntitySet<UserManagement_Menus> UserManagement_Menus
		{
			get
			{
				return this._UserManagement_Menus;
			}
			set
			{
				this._UserManagement_Menus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserManagement_AuthorizedPages(UserManagement_AuthorizedPage entity)
		{
			this.SendPropertyChanging();
			entity.UserManagement_PagePath = this;
		}
		
		private void detach_UserManagement_AuthorizedPages(UserManagement_AuthorizedPage entity)
		{
			this.SendPropertyChanging();
			entity.UserManagement_PagePath = null;
		}
		
		private void attach_UserManagement_Menus(UserManagement_Menus entity)
		{
			this.SendPropertyChanging();
			entity.UserManagement_PagePath = this;
		}
		
		private void detach_UserManagement_Menus(UserManagement_Menus entity)
		{
			this.SendPropertyChanging();
			entity.UserManagement_PagePath = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManagement_RoleBasedFunctionFlags")]
	public partial class UserManagement_RoleBasedFunctionFlag
	{
		
		private System.Guid _RoleId;
		
		private string _FunctionFlag;
		
		private string _Description;
		
		public UserManagement_RoleBasedFunctionFlag()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionFlag", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FunctionFlag
		{
			get
			{
				return this._FunctionFlag;
			}
			set
			{
				if ((this._FunctionFlag != value))
				{
					this._FunctionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
